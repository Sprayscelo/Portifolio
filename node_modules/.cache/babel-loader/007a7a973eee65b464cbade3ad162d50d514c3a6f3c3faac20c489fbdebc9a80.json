{"ast":null,"code":"import { renderSlot as _renderSlot, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-365636f4\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"selectButtonRoot\"\n};\nconst _hoisted_2 = {\n  class: \"dropDownButtonContainer\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"spinner\"\n};\nconst _hoisted_4 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_renderSlot(_ctx.$slots, \"default\", {\n    id: \"slotInput\"\n  }, undefined, true), _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(this.$props.arrayList, item => {\n    return _openBlock(), _createElementBlock(\"ul\", {\n      key: item.id\n    }, [$data.spinner ? (_openBlock(), _createElementBlock(\"i\", _hoisted_3)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"li\", {\n      onClick: $event => _ctx.$emit('clicked', item.name)\n    }, _toDisplayString(item.name), 9 /* TEXT, PROPS */, _hoisted_4)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"mappings":";;;EACSA,KAAK,EAAC;AAAkB;;EAEpBA,KAAK,EAAC;AAAyB;;;EAEVA,KAAK,EAAC;;;;uBAJpCC,oBAQM,OARNC,UAQM,GAPFC,YAA4BC;IAAtBC,EAAE,EAAC;EAAW,qBACpBC,oBAKM,OALNC,UAKM,sBAJFN,oBAGKO,kCAHmBC,MAAM,CAACC,SAAS,EAA7BC,IAAI;yBAAfV,oBAGK;MAHsCW,GAAG,EAAED,IAAI,CAACN;QACxCQ,aAAO,kBAAhBZ,oBAAsC,KAAtCa,UAAsC,wCACtCR,oBAA8D;MAAzDS,OAAK,YAAEX,UAAK,YAAYO,IAAI,CAACK,IAAI;wBAAOL,IAAI,CAACK,IAAI","names":["class","_createElementBlock","_hoisted_1","_renderSlot","_ctx","id","_createElementVNode","_hoisted_2","_Fragment","$props","arrayList","item","key","$data","_hoisted_3","onClick","name"],"sourceRoot":"","sources":["D:\\Area de trabalho\\Portifolio\\Portifolio\\src\\components\\utilities\\dropdown.vue"],"sourcesContent":["<template>\r\n    <div class=\"selectButtonRoot\">\r\n        <slot id=\"slotInput\"></slot>\r\n        <div class=\"dropDownButtonContainer\">\r\n            <ul v-for=\"item in this.$props.arrayList\" :key=\"item.id\">\r\n                <i v-if=\"spinner\" class=\"spinner\"></i>\r\n                <li @click=\"$emit('clicked', item.name)\">  {{item.name}} </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport nourl from '@/static/no_url_founded.jpeg'\r\n\r\n    export default {\r\n        name: 'selectButton',\r\n        props: ['searchKey', 'arrayList'],\r\n        data() {\r\n            return {\r\n                searchedKey: this.searchKey,\r\n                searchedGame: '',\r\n                listArray: '',\r\n                spinner: true,\r\n                noUrlImage: nourl\r\n            }\r\n        }\r\n        // watch: {\r\n        //     searchedGame() {\r\n        //         const letters = new RegExp(`${this.searchedGame}`, 'i')\r\n        //         let filteredList = this.$props.arrayList.filter(object => letters.test(object[`${this.searchedKey}`]))\r\n        //         this.listArray = !filteredList || !this.searchedGame ? '' : filteredList\r\n        //         this.$emit('gamesFiltered')\r\n        //         return this.listArray\r\n        //     },\r\n        // }\r\n    }\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n    .selectButtonRoot {\r\n        position: relative;\r\n        .dropDownButtonContainer{\r\n        display: flex;\r\n        justify-content: space-around;\r\n        align-items: center;\r\n        flex-direction: column;\r\n        position: relative;\r\n        height: 30%;\r\n        }\r\n        ul {\r\n            display: flex;\r\n            justify-content: center;\r\n            gap: 5px;\r\n            list-style: none;\r\n            padding: 0;\r\n            width: 92.5%;\r\n            background-color: white;\r\n            margin: 0;\r\n            img {\r\n                display: inline-block;\r\n                width: 15px;\r\n                height: 15px;\r\n                flex-grow: 0;\r\n                align-self: center;\r\n            }\r\n            li {\r\n                display: inline-block;\r\n                width: fit-content;\r\n                padding: 5px 0px 5px 0px;\r\n            }\r\n        }\r\n    }\r\n    \r\n    #slotInput {\r\n        display: block;\r\n        position: relative;\r\n    }\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}