{"ast":null,"code":"import { renderSlot as _renderSlot, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"selectButtonRoot\"\n};\nconst _hoisted_2 = {\n  class: \"dropDownButtonContainer\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"spinner\"\n};\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_renderSlot(_ctx.$slots, \"default\"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(this.$props.arrayList, item => {\n    return _openBlock(), _createElementBlock(\"ul\", {\n      key: item.id\n    }, [$data.spinner ? (_openBlock(), _createElementBlock(\"i\", _hoisted_3)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"li\", {\n      onClick: $event => _ctx.$emit('clicked', item.name)\n    }, [item.url ? (_openBlock(), _createElementBlock(\"img\", {\n      key: 0,\n      onLoad: _cache[0] || (_cache[0] = $event => $data.spinner = false),\n      src: item.url,\n      alt: \"\"\n    }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_5)) : _createCommentVNode(\"v-if\", true), _createTextVNode(\" \" + _toDisplayString(item.name), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_4)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"mappings":";;EACSA,KAAK,EAAC;AAAkB;;EACpBA,KAAK,EAAC;AAAyB;;;EAIVA,KAAK,EAAC;;;;;uBALpCC,oBASM,OATNC,UASM,GARFC,oBAOM,OAPNC,UAOM,GANFC,YAAaC,4CACbL,oBAIKM,kCAJmBC,MAAM,CAACC,SAAS,EAA7BC,IAAI;yBAAfT,oBAIK;MAJsCU,GAAG,EAAED,IAAI,CAACE;QAExCC,aAAO,kBAAhBZ,oBAAsC,KAAtCa,UAAsC,wCACtCX,oBAAkI;MAA7HY,OAAK,YAAET,UAAK,YAAYI,IAAI,CAACM,IAAI;QAAuCN,IAAI,CAACO,GAAG,kBAA3ChB,oBAAoE;;MAA9DiB,MAAI,sCAAEL,aAAO;MAA2BM,GAAG,EAAET,IAAI,CAACO,GAAG;MAAEG,GAAG,EAAC;gHAAG,GAAC,oBAAEV,IAAI,CAACM,IAAI","names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_renderSlot","_ctx","_Fragment","$props","arrayList","item","key","id","$data","_hoisted_3","onClick","name","url","onLoad","src","alt"],"sourceRoot":"","sources":["D:\\Area de trabalho\\Portifolio\\Portifolio\\src\\components\\utilities\\dropdown.vue"],"sourcesContent":["<template>\r\n    <div class=\"selectButtonRoot\">\r\n        <div class=\"dropDownButtonContainer\">\r\n            <slot></slot>\r\n            <ul v-for=\"item in this.$props.arrayList\" :key=\"item.id\">\r\n                \r\n                <i v-if=\"spinner\" class=\"spinner\"></i>\r\n                <li @click=\"$emit('clicked', item.name)\"> <img @load=\"spinner = false\" v-if=\"item.url\" :src=\"item.url\" alt=\"\"> {{item.name}} </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: 'selectButton',\r\n        props: ['searchKey', 'arrayList'],\r\n        data() {\r\n            return {\r\n                searchedKey: this.searchKey,\r\n                searchedGame: '',\r\n                listArray: '',\r\n                spinner: true\r\n            }\r\n        }\r\n        // watch: {\r\n        //     searchedGame() {\r\n        //         const letters = new RegExp(`${this.searchedGame}`, 'i')\r\n        //         let filteredList = this.$props.arrayList.filter(object => letters.test(object[`${this.searchedKey}`]))\r\n        //         this.listArray = !filteredList || !this.searchedGame ? '' : filteredList\r\n        //         this.$emit('gamesFiltered')\r\n        //         return this.listArray\r\n        //     },\r\n        // }\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n    .selectButtonRoot {\r\n        width: 100%;\r\n        \r\n        ul {\r\n            list-style: none;\r\n            padding: 0;\r\n            border-radius: 5px;\r\n            width: 100%;\r\n            background-color: white;\r\n            margin: 0;\r\n            li {\r\n                \r\n            }\r\n        }\r\n    }\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}