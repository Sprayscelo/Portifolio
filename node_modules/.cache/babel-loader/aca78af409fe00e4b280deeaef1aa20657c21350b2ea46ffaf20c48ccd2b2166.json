{"ast":null,"code":"import { onMounted } from 'vue';\nimport CryptoJS from 'crypto-js';\nimport axios from 'axios';\n//import moment from 'moment'\n\nexport default {\n  setup() {\n    onMounted(() => {\n      this.apiMarvelRequest('/v1/public/characters', {\n        \"offset\": '0'\n      });\n    });\n  },\n  name: 'app-marvel',\n  data() {\n    return {\n      marvelUrlBase: 'https://gateway.marvel.com',\n      marvelCharacters: ''\n    };\n  },\n  methods: {\n    async apiMarvelRequest(endpoint, parameters) {\n      let hash = CryptoJS.MD5(1 + process.env.VUE_APP_MARVEL_PRIVATE_KEY + process.env.VUE_APP_MARVEL_PUBLIC_KEY).toString();\n      let urlBase = `${this.marvelUrlBase}${endpoint}?orderBy=name&apikey=${process.env.VUE_APP_MARVEL_PUBLIC_KEY}&hash=${hash}&ts=1`;\n      for (let param in parameters) {\n        urlBase += `&${param}=${parameters[param]}`;\n      }\n      let response = await axios.get(urlBase);\n      return response;\n    }\n  }\n};","map":{"version":3,"mappings":"AASA,SAASA,SAAQ,QAAS,KAAI;AAC9B,OAAOC,QAAO,MAAO,WAAW;AAChC,OAAOC,KAAI,MAAO,OAAO;AACzB;;AAEI,eAAe;EAEXC,KAAK,GAAG;IACJH,SAAS,CAAE,MAAM;MACb,IAAI,CAACI,gBAAgB,CAAC,uBAAuB,EAAE;QAAC,QAAQ,EAAE;MAAG,CAAC;IAClE,CAAC;EACL,CAAC;EACDC,IAAI,EAAE,YAAY;EAClBC,IAAI,GAAG;IACH,OAAO;MACHC,aAAa,EAAE,4BAA4B;MAC3CC,gBAAgB,EAAE;IACtB;EACJ,CAAC;EACDC,OAAO,EAAE;IACL,MAAML,gBAAgB,CAACM,QAAQ,EAAEC,UAAU,EAAE;MACzC,IAAIC,IAAG,GAAIX,QAAQ,CAACY,GAAG,CAAC,CAAC,GAACC,OAAO,CAACC,GAAG,CAACC,0BAA0B,GAACF,OAAO,CAACC,GAAG,CAACE,yBAAyB,CAAC,CAACC,QAAQ,EAAC;MACjH,IAAIC,OAAM,GAAK,GAAE,IAAI,CAACZ,aAAc,GAAEG,QAAS,wBAAuBI,OAAO,CAACC,GAAG,CAACE,yBAA0B,SAAQL,IAAK,OAAK;MAC9H,KAAI,IAAIQ,KAAI,IAAKT,UAAU,EAAE;QACzBQ,OAAM,IAAM,IAAGC,KAAM,IAAGT,UAAU,CAACS,KAAK,CAAE;MAC9C;MACA,IAAIC,QAAO,GAAI,MAAMnB,KAAK,CAACoB,GAAG,CAACH,OAAO;MACtC,OAAOE,QAAO;IAClB;EACJ;AAGJ","names":["onMounted","CryptoJS","axios","setup","apiMarvelRequest","name","data","marvelUrlBase","marvelCharacters","methods","endpoint","parameters","hash","MD5","process","env","VUE_APP_MARVEL_PRIVATE_KEY","VUE_APP_MARVEL_PUBLIC_KEY","toString","urlBase","param","response","get"],"sourceRoot":"","sources":["D:\\Area de trabalho\\Portifolio\\Portifolio\\src\\components\\marvel\\marvel.vue"],"sourcesContent":["<template>\r\n    <div id=\"weatherRoot\">\r\n        <div id=\"weatherContainer\">\r\n            \r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { onMounted } from 'vue'\r\nimport CryptoJS from 'crypto-js';\r\nimport axios from 'axios';\r\n//import moment from 'moment'\r\n\r\n    export default {\r\n\r\n        setup() {\r\n            onMounted( () => {\r\n                this.apiMarvelRequest('/v1/public/characters', {\"offset\": '0'})\r\n            })\r\n        },\r\n        name: 'app-marvel',\r\n        data() {\r\n            return {\r\n                marvelUrlBase: 'https://gateway.marvel.com',\r\n                marvelCharacters: ''\r\n            }\r\n        },\r\n        methods: {\r\n            async apiMarvelRequest(endpoint, parameters) {\r\n                let hash = CryptoJS.MD5(1+process.env.VUE_APP_MARVEL_PRIVATE_KEY+process.env.VUE_APP_MARVEL_PUBLIC_KEY).toString()\r\n                let urlBase = `${this.marvelUrlBase}${endpoint}?orderBy=name&apikey=${process.env.VUE_APP_MARVEL_PUBLIC_KEY}&hash=${hash}&ts=1`\r\n                for(let param in parameters) {\r\n                    urlBase += `&${param}=${parameters[param]}`\r\n                }\r\n                let response = await axios.get(urlBase)\r\n                return response\r\n            },\r\n        },\r\n        \r\n            \r\n    }\r\n</script>\r\n\r\n<style>\r\n\r\ninput:hover {\r\n    background-color: black;\r\n}\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}