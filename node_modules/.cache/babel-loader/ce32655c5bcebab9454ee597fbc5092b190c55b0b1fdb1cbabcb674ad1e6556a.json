{"ast":null,"code":"import axios from \"axios\";\nimport nourl from '@/static/no_url_founded.jpeg';\nexport default {\n  name: \"gamesConfig\",\n  data() {\n    return {\n      gameSearched: \"\",\n      gamesFounded: \"\",\n      gameFps: \"\",\n      gameQuality: \"Low\",\n      noUrlFounded: nourl\n    };\n  },\n  components: {},\n  methods: {\n    async searchGames(endpoint, query) {\n      //Always send the same header for this call, dont need to put on the parameter when calling.\n      try {\n        const response = await axios.post(`http://localhost:3000/${endpoint}`, query, {\n          headers: {\n            \"Content-Type\": \"text/plain\"\n          }\n        });\n        return response.data;\n      } catch (error) {\n        console.log(\"callEndPoint ERRO: \" + error);\n        throw error;\n      }\n    },\n    selectGame(game) {\n      this.gameSearched = game;\n      this.gamesFounded = '';\n    },\n    getData() {\n      return {\n        \"gameSearched\": this.gameSearched,\n        \"gameFps\": this.gameFps,\n        \"gameQuality\": this.gameQuality\n      };\n    },\n    clearCard() {\n      this.gameSearched = '';\n      this.gameFps = '';\n      this.gameQuality = 'Low';\n    }\n  },\n  watch: {\n    gameSearched(nv) {\n      clearTimeout(this.timeout);\n      if (!nv) return;\n      this.timeout = setTimeout(async () => {\n        try {\n          const gamesData = await this.searchGames(\"games\", `fields name, artworks; where platforms = (6) & name ~ *\"${nv}\"*;`);\n          const screenShotsIds = gamesData.map(art => art?.artworks ? art.artworks[0] : null).filter(art => art);\n          if (screenShotsIds.length) {\n            const result = await this.searchGames(\"artworks\", `fields url, game; where id = (${screenShotsIds.join(',')});`);\n            gamesData.map(element => {\n              element.url = result.find(link => link.game == element.id)?.url ?? '';\n              return element;\n            });\n          }\n          this.gamesFounded = gamesData;\n          console.log(gamesData);\n        } catch (error) {\n          console.log(\"Erro ao pesquisar jogos:\", error);\n        }\n      }, 1000);\n    }\n  }\n};","map":{"version":3,"mappings":"AAsCA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,KAAI,MAAO,8BAA6B;AAE/C,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,IAAI,GAAG;IACL,OAAO;MACLC,YAAY,EAAE,EAAE;MAChBC,YAAY,EAAE,EAAE;MAChBC,OAAO,EAAE,EAAE;MACXC,WAAW,EAAE,KAAK;MAClBC,YAAY,EAAEP;IAChB,CAAC;EACH,CAAC;EACDQ,UAAU,EAAE,CAEZ,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,WAAW,CAACC,QAAQ,EAAEC,KAAK,EAAE;MACjC;MACA,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMd,KAAK,CAACe,IAAI,CAC9B,yBAAwBH,QAAS,EAAC,EACnCC,KAAK,EACL;UAAEG,OAAO,EAAE;YAAE,cAAc,EAAE;UAAa;QAAE,EAC7C;QACD,OAAOF,QAAQ,CAACX,IAAI;MACtB,EAAE,OAAOc,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAAC,qBAAoB,GAAIF,KAAK,CAAC;QAC1C,MAAMA,KAAK;MACb;IACF,CAAC;IACDG,UAAU,CAACC,IAAI,EAAE;MACf,IAAI,CAACjB,YAAW,GAAIiB,IAAG;MACvB,IAAI,CAAChB,YAAW,GAAI,EAAC;IACvB,CAAC;IACDiB,OAAO,GAAG;MACR,OAAO;QACL,cAAc,EAAE,IAAI,CAAClB,YAAY;QACjC,SAAS,EAAE,IAAI,CAACE,OAAO;QACvB,aAAa,EAAE,IAAI,CAACC;MACtB;IACF,CAAC;IACDgB,SAAS,GAAG;MACV,IAAI,CAACnB,YAAW,GAAI,EAAC;MACrB,IAAI,CAACE,OAAM,GAAI,EAAC;MAChB,IAAI,CAACC,WAAU,GAAI,KAAI;IACzB;EACF,CAAC;EACDiB,KAAK,EAAE;IACLpB,YAAY,CAACqB,EAAE,EAAE;MACfC,YAAY,CAAC,IAAI,CAACC,OAAO,CAAC;MAC1B,IAAG,CAACF,EAAE,EAAE;MAER,IAAI,CAACE,OAAM,GAAIC,UAAU,CAAC,YAAY;QACpC,IAAI;UACF,MAAMC,SAAQ,GAAI,MAAM,IAAI,CAAClB,WAAW,CACtC,OAAO,EACN,2DAA0Dc,EAAG,KAAG,CAClE;UACD,MAAMK,cAAa,GAAID,SAAS,CAACE,GAAG,CAACC,GAAE,IAAKA,GAAG,EAAEC,QAAO,GAAID,GAAG,CAACC,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC,CAACC,MAAM,CAACF,GAAE,IAAKA,GAAG;UACrG,IAAGF,cAAc,CAACK,MAAM,EAAE;YACxB,MAAMC,MAAK,GAAI,MAAM,IAAI,CAACzB,WAAW,CACzB,UAAU,EACT,iCAAgCmB,cAAc,CAACO,IAAI,CAAC,GAAG,CAAE,IAAE,CAC7D;YACXR,SAAS,CAACE,GAAG,CAACO,OAAM,IAAK;cACrBA,OAAO,CAACC,GAAE,GAAIH,MAAM,CAACI,IAAI,CAACC,IAAG,IAAKA,IAAI,CAACpB,IAAG,IAAKiB,OAAO,CAACI,EAAE,CAAC,EAAEH,GAAE,IAAK,EAAC;cACpE,OAAOD,OAAM;YACjB,CAAC,CAAC;UACJ;UACA,IAAI,CAACjC,YAAW,GAAIwB,SAAQ;UAC5BX,OAAO,CAACC,GAAG,CAACU,SAAS;QACvB,EAAE,OAAOZ,KAAK,EAAE;UACdC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,KAAK,CAAC;QAChD;MACF,CAAC,EAAE,IAAI,CAAC;IACV;EACF;AACF,CAAC","names":["axios","nourl","name","data","gameSearched","gamesFounded","gameFps","gameQuality","noUrlFounded","components","methods","searchGames","endpoint","query","response","post","headers","error","console","log","selectGame","game","getData","clearCard","watch","nv","clearTimeout","timeout","setTimeout","gamesData","screenShotsIds","map","art","artworks","filter","length","result","join","element","url","find","link","id"],"sourceRoot":"","sources":["D:\\Area de trabalho\\Portifolio\\Portifolio\\src\\components\\pcBuilderAi\\gamesConfig.vue"],"sourcesContent":["<template>\r\n  <div id=\"gamesConfigRoot\">\r\n    <div id=\"tittleContainer\">\r\n      <h3>Game selection</h3>\r\n      <slot id=\"removeGame\"></slot>\r\n    </div>\r\n    <div class=\"gamesConfigContainer\">\r\n      <div>\r\n        <p> Plase select a game </p>\r\n        <div class=\"selectButtonRoot\">\r\n          <input required type=\"text\" v-model=\"gameSearched\" placeholder=\"Type a game name...\" id=\"gameSearchedInput\">\r\n          <div v-if=\"gamesFounded.length > 1\" :class=\"`dropDownButtonContainer ${dropTransition ? 'dropAnimation' : ''}`\">\r\n              <ul v-for=\"item in gamesFounded\" :key=\"item.id\" ref=\"configs\">\r\n                  <img @load=\"spinner = false\" v-if=\"item.url\" :src=\"item.url\" alt=\"\">\r\n                  <img v-else :src=\"noUrlImage\" alt=\"\">\r\n                  <li @click=\"selectGame(item.name)\">  {{item.name}} </li>\r\n              </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <p>How much fps you want to run?</p>\r\n        <input required type=\"number\" v-model=\"gameFps\" placeholder=\"FPS quantity\">\r\n      </div>\r\n      <div>\r\n        <p>Please select the quality</p>\r\n        <select v-model=\"gameQuality\">\r\n          <option name=\"Low\" id=\"Low\" value=\"Low\"> Low </option>\r\n          <option name=\"Medium\" id=\"Medium\" value=\"Medium\"> Medium </option>\r\n          <option name=\"High\" id=\"High\" value=\"High\"> High </option>\r\n          <option name=\"Ultra high\" id=\"UltraHigh\" value=\"Ultra high\">Ultra High</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport nourl from '@/static/no_url_founded.jpeg'\r\n\r\nexport default {\r\n  name: \"gamesConfig\",\r\n  data() {\r\n    return {\r\n      gameSearched: \"\",\r\n      gamesFounded: \"\",\r\n      gameFps: \"\",\r\n      gameQuality: \"Low\",\r\n      noUrlFounded: nourl,\r\n    };\r\n  },\r\n  components: {\r\n    \r\n  },\r\n  methods: {\r\n    async searchGames(endpoint, query) {\r\n      //Always send the same header for this call, dont need to put on the parameter when calling.\r\n      try {\r\n        const response = await axios.post(\r\n          `http://localhost:3000/${endpoint}`,\r\n          query,\r\n          { headers: { \"Content-Type\": \"text/plain\" } }\r\n        );\r\n        return response.data;\r\n      } catch (error) {\r\n        console.log(\"callEndPoint ERRO: \" + error);\r\n        throw error;\r\n      }\r\n    },\r\n    selectGame(game) {\r\n      this.gameSearched = game\r\n      this.gamesFounded = ''\r\n    },\r\n    getData() {\r\n      return {\r\n        \"gameSearched\": this.gameSearched,\r\n        \"gameFps\": this.gameFps,\r\n        \"gameQuality\": this.gameQuality\r\n      }\r\n    },\r\n    clearCard() {\r\n      this.gameSearched = ''\r\n      this.gameFps = ''\r\n      this.gameQuality = 'Low'\r\n    }\r\n  },\r\n  watch: {\r\n    gameSearched(nv) {\r\n      clearTimeout(this.timeout);\r\n      if(!nv) return \r\n\r\n      this.timeout = setTimeout(async () => {\r\n        try {\r\n          const gamesData = await this.searchGames(\r\n            \"games\",\r\n            `fields name, artworks; where platforms = (6) & name ~ *\"${nv}\"*;`\r\n          );\r\n          const screenShotsIds = gamesData.map(art => art?.artworks ? art.artworks[0] : null).filter(art => art)\r\n          if(screenShotsIds.length) {\r\n            const result = await this.searchGames(\r\n                        \"artworks\",\r\n                        `fields url, game; where id = (${screenShotsIds.join(',')});`\r\n                      );\r\n            gamesData.map(element => {\r\n                element.url = result.find(link => link.game == element.id)?.url ?? ''\r\n                return element\r\n            });\r\n          }\r\n          this.gamesFounded = gamesData\r\n          console.log(gamesData)\r\n        } catch (error) {\r\n          console.log(\"Erro ao pesquisar jogos:\", error);\r\n        }\r\n      }, 1000);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"scss\" name=\"card-styles\">\r\n\r\n@import '@/static/variables.scss';\r\n\r\n  #gamesConfigRoot {\r\n    background-color: black;\r\n    border-radius: 10px;\r\n    box-shadow: 0px 0px 1px 1px;\r\n    //border: 2px dotted black;\r\n    background: whitesmoke;\r\n    h3 {\r\n      display: inline-block;\r\n      margin: 0px;\r\n      margin-bottom: .5em;\r\n      text-align: center;\r\n    }\r\n    .gamesConfigContainer {\r\n      position: relative;\r\n      p {\r\n        margin-top: 0px;\r\n        margin-bottom: 7px;\r\n      }\r\n      > div {\r\n        position: relative;\r\n        margin-bottom: 1em;\r\n        input {\r\n          position: relative;\r\n          color: black;\r\n          border-radius: 5px ;\r\n          border: solid 1px gray;\r\n          text-indent: 3px;\r\n          height: 1.2rem;\r\n          font-family: 'Montserrat', sans-serif;\r\n          font-weight: bold;\r\n          padding: 5px;\r\n          width: 96%;\r\n        }\r\n        input:hover {\r\n          outline: none;\r\n          box-shadow: 15px 0px 15px -10px;\r\n          transition: all 0.2s ease-in;\r\n        }\r\n      }\r\n      select {\r\n        border-radius: 5px;\r\n        padding: 3px;\r\n        text-align: center;\r\n        border: 1px solid black;\r\n      }\r\n    }\r\n  }\r\n\r\n  #tittleContainer {\r\n    display: grid;\r\n    grid-template-columns: 1fr 25px;\r\n    place-items: center;\r\n    gap: 10px;\r\n  }\r\n</style>\r\n\r\n<style scoped lang=\"scss\" name=\"dropdown-styles\">\r\n.dropAnimation {\r\n  animation: dropdown 1s ease-in-out none;\r\n}\r\n  .selectButtonRoot {\r\n      position: relative;\r\n      .dropDownButtonContainer{\r\n          display: flex;\r\n          flex-direction: column;\r\n          position: absolute;\r\n          width: 100%;\r\n          max-height: 155px;\r\n          overflow-y: auto;\r\n          overflow-x: hidden;\r\n          background-color: whitesmoke;\r\n          border-radius: 5px;\r\n          z-index: 1;\r\n      }\r\n      \r\n      @keyframes dropdown {\r\n          0% {\r\n              height: 0px;\r\n          }\r\n          100% {\r\n              height: min-content;\r\n          }\r\n      }\r\n      ul {\r\n          display: flex;\r\n          justify-content: flex-start;\r\n          gap: 5px;\r\n          list-style: none;\r\n          padding: 0px 5px 0px 0px;\r\n          margin: 0;\r\n          text-align: center;\r\n          img {\r\n              display: inline-block;\r\n              width: 15px;\r\n              height: 15px;\r\n              flex-grow: 0;\r\n              align-self: center;\r\n              margin-left: 10px;\r\n          }\r\n          li {\r\n              position: relative;\r\n              color: black;\r\n              text-indent: 3px;\r\n              font-family: 'Montserrat', sans-serif;\r\n              font-weight: bold;\r\n              padding: 5px;\r\n              width: 100%;\r\n              cursor: pointer;\r\n          }\r\n          li:hover {\r\n            background-color: #8EB1C7;\r\n            transition: all .1s ease-in-out;\r\n          }\r\n      }\r\n  }\r\n\r\n  .dropDownButtonContainer::-webkit-scrollbar {\r\n      width: 6px;\r\n  }\r\n\r\n  .dropDownButtonContainer::-webkit-scrollbar-thumb {\r\n      background-color: rgb(140, 210, 228);\r\n      border-radius: 5px;\r\n  }\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}