{"ast":null,"code":"import { renderSlot as _renderSlot, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-365636f4\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"selectButtonRoot\"\n};\nconst _hoisted_2 = [\"src\"];\nconst _hoisted_3 = [\"src\"];\nconst _hoisted_4 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_renderSlot(_ctx.$slots, \"default\", {\n    id: \"slotInput\"\n  }, undefined, true), _createElementVNode(\"div\", {\n    class: _normalizeClass(`dropDownButtonContainer ${$data.dropTransition ? 'dropAnimation' : ''}`)\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(this.$props.arrayList, item => {\n    return _openBlock(), _createElementBlock(\"ul\", {\n      key: item.id\n    }, [item.url ? (_openBlock(), _createElementBlock(\"img\", {\n      key: 0,\n      onLoad: _cache[0] || (_cache[0] = $event => $data.spinner = false),\n      src: item.url,\n      alt: \"\"\n    }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_2)) : (_openBlock(), _createElementBlock(\"img\", {\n      key: 1,\n      src: $data.noUrlImage,\n      alt: \"\"\n    }, null, 8 /* PROPS */, _hoisted_3)), _createElementVNode(\"li\", {\n      onClick: $event => _ctx.$emit('clicked', item.name)\n    }, _toDisplayString(item.name), 9 /* TEXT, PROPS */, _hoisted_4)]);\n  }), 128 /* KEYED_FRAGMENT */))], 2 /* CLASS */)]);\n}","map":{"version":3,"mappings":";;;EACSA,KAAK,EAAC;AAAkB;;;;;uBAA7BC,oBASM,OATNC,UASM,GARFC,YAA4BC;IAAtBC,EAAE,EAAC;EAAW,qBACpBC,oBAMM;IANAN,KAAK,6CAA6BO,oBAAc;yBAClDN,oBAIKO,kCAJmBC,MAAM,CAACC,SAAS,EAA7BC,IAAI;yBAAfV,oBAIK;MAJsCW,GAAG,EAAED,IAAI,CAACN;QACdM,IAAI,CAACE,GAAG,kBAA3CZ,oBAAoE;;MAA9Da,MAAI,sCAAEP,aAAO;MAA2BQ,GAAG,EAAEJ,IAAI,CAACE,GAAG;MAAEG,GAAG,EAAC;2EACjEf,oBAAqC;;MAAxBc,GAAG,EAAER,gBAAU;MAAES,GAAG,EAAC;0CAClCV,oBAA8D;MAAzDW,OAAK,YAAEb,UAAK,YAAYO,IAAI,CAACO,IAAI;wBAAOP,IAAI,CAACO,IAAI","names":["class","_createElementBlock","_hoisted_1","_renderSlot","_ctx","id","_createElementVNode","$data","_Fragment","$props","arrayList","item","key","url","onLoad","src","alt","onClick","name"],"sourceRoot":"","sources":["D:\\Area de trabalho\\Portifolio\\Portifolio\\src\\components\\utilities\\dropdown.vue"],"sourcesContent":["<template>\r\n    <div class=\"selectButtonRoot\">\r\n        <slot id=\"slotInput\"></slot>\r\n        <div :class=\"`dropDownButtonContainer ${dropTransition ? 'dropAnimation' : ''}`\">\r\n            <ul v-for=\"item in this.$props.arrayList\" :key=\"item.id\">\r\n                <img @load=\"spinner = false\" v-if=\"item.url\" :src=\"item.url\" alt=\"\">\r\n                <img v-else :src=\"noUrlImage\" alt=\"\">\r\n                <li @click=\"$emit('clicked', item.name)\">  {{item.name}} </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport nourl from '@/static/no_url_founded.jpeg'\r\n\r\n    export default {\r\n        name: 'selectButton',\r\n        props: ['searchKey', 'arrayList'],\r\n        data() {\r\n            return {\r\n                searchedKey: this.searchKey,\r\n                listArray: '',\r\n                spinner: true,\r\n                noUrlImage: nourl,\r\n                dropTransition: this.$props.arrayList.length > 0\r\n            }\r\n        },\r\n        watch: {\r\n            arrayList(nv) {\r\n                this.dropTransition = nv.length > 0\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n    .selectButtonRoot {\r\n        position: relative;\r\n        .dropDownButtonContainer{\r\n            display: flex;\r\n            flex-direction: column;\r\n            position: relative;\r\n            width: 95%;\r\n            overflow-y: auto;\r\n            overflow-x: hidden;\r\n            scrollbar-width: thin;\r\n            //background-color: whitesmoke;\r\n            border-radius: 10px;\r\n        }\r\n        .dropAnimation {\r\n            height: 200px;\r\n            background-color: black;\r\n            transition: all 1s ease-in-out;\r\n        }\r\n        ul {\r\n            display: flex;\r\n            justify-content: flex-start;\r\n            gap: 5px;\r\n            list-style: none;\r\n            padding: 0px 5px 0px 0px;\r\n            margin: 0;\r\n            text-align: center;\r\n            img {\r\n                display: inline-block;\r\n                width: 15px;\r\n                height: 15px;\r\n                flex-grow: 0;\r\n                align-self: center;\r\n                margin-left: 10px;\r\n            }\r\n            li {\r\n                position: relative;\r\n                color: black;\r\n                text-indent: 3px;\r\n                font-family: 'Montserrat', sans-serif;\r\n                font-weight: bold;\r\n                padding: 5px;\r\n                width: 100%;\r\n            }\r\n        }\r\n    }\r\n\r\n    .dropDownButtonContainer::-webkit-scrollbar {\r\n        width: 6px;\r\n    }\r\n\r\n    .dropDownButtonContainer::-webkit-scrollbar-thumb {\r\n        background-color: rgb(140, 210, 228);\r\n        border-radius: 5px;\r\n    }\r\n    \r\n    #slotInput {\r\n        display: block;\r\n        position: relative;\r\n    }\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}