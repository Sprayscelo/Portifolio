{"ast":null,"code":"import { renderSlot as _renderSlot, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"selectButtonRoot\"\n};\nconst _hoisted_2 = {\n  class: \"dropDownButtonContainer\"\n};\nconst _hoisted_3 = [\"src\"];\nconst _hoisted_4 = {\n  key: 1,\n  class: \"spinner\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_renderSlot(_ctx.$slots, \"default\"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.listArray, item => {\n    return _openBlock(), _createElementBlock(\"ul\", {\n      key: item.id\n    }, [item.url ? (_openBlock(), _createElementBlock(\"img\", {\n      key: 0,\n      onLoad: _cache[0] || (_cache[0] = $event => $data.spinner = false),\n      src: item.url,\n      alt: \"\"\n    }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_3)) : _createCommentVNode(\"v-if\", true), $data.spinner ? (_openBlock(), _createElementBlock(\"i\", _hoisted_4)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"li\", null, _toDisplayString(item.name), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"mappings":";;EACSA,KAAK,EAAC;AAAkB;;EACpBA,KAAK,EAAC;AAAyB;;;;EAIVA,KAAK,EAAC;;;uBALpCC,oBASM,OATNC,UASM,GARFC,oBAOM,OAPNC,UAOM,GANFC,YAAaC,4CACbL,oBAIKM,6BAJcC,eAAS,EAAjBC,IAAI;yBAAfR,oBAIK;MAJ0BS,GAAG,EAAED,IAAI,CAACE;QACFF,IAAI,CAACG,GAAG,kBAA3CX,oBAAoE;;MAA9DY,MAAI,sCAAEL,aAAO;MAA2BM,GAAG,EAAEL,IAAI,CAACG,GAAG;MAAEG,GAAG,EAAC;+FACxDP,aAAO,kBAAhBP,oBAAsC,KAAtCe,UAAsC,wCACtCb,oBAAwB,6BAAjBM,IAAI,CAACQ,IAAI","names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_renderSlot","_ctx","_Fragment","$data","item","key","id","url","onLoad","src","alt","_hoisted_4","name"],"sourceRoot":"","sources":["D:\\Area de trabalho\\Portifolio\\Portifolio\\src\\components\\utilities\\dropdown.vue"],"sourcesContent":["<template>\r\n    <div class=\"selectButtonRoot\">\r\n        <div class=\"dropDownButtonContainer\">\r\n            <slot></slot>\r\n            <ul v-for=\"item in listArray\" :key=\"item.id\">\r\n                <img @load=\"spinner = false\" v-if=\"item.url\" :src=\"item.url\" alt=\"\">\r\n                <i v-if=\"spinner\" class=\"spinner\"></i>\r\n                <li> {{item.name}} </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: 'selectButton',\r\n        props: ['searchKey', 'arrayList', 'searchedGame'],\r\n        data() {\r\n            return {\r\n                searchedKey: this.searchKey,\r\n                searchedGame: this.$props.searchedGame,\r\n                listArray: '',\r\n                spinner: true\r\n            }\r\n        },\r\n        watch: {\r\n            searchedGame() {\r\n                if(this.$props.input) {\r\n                    const letters = new RegExp(`${this.searchedGame}`, 'i')\r\n                    let filteredList = this.$props.arrayList.filter(object => letters.test(object[`${this.searchedKey}`]))\r\n                    this.listArray = !filteredList || !this.searchedGame ? '' : filteredList\r\n                }\r\n            },\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n    .dropDownButtonContainer {\r\n        input {\r\n            color: black;\r\n            border-radius: 5px ;\r\n            border: solid 1px gray;\r\n            text-indent: 3px;\r\n            height: 1.2rem;\r\n            font-family: 'Montserrat', sans-serif;\r\n            font-weight: bold;\r\n            padding: 5px;\r\n        }\r\n        input:focus {\r\n            outline: none;\r\n            box-shadow: 0px 0px 3px 0px;\r\n            transition: all 0.2s ease-in;\r\n        }\r\n        ul {\r\n            list-style: none;\r\n            padding: 0;\r\n        }\r\n        slot {\r\n            background-color: black\r\n        }\r\n    }\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}