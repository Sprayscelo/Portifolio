{"ast":null,"code":"// import CryptoJS from 'crypto-js';\nimport axios from \"axios\";\nimport moment from \"moment\";\nexport default {\n  name: \"pcBuilderAi\",\n  data() {\n    return {\n      token: \"\",\n      tokenExpireTime: null,\n      lastRequest: null\n    };\n  },\n  methods: {\n    async getIgbToken() {\n      axios.get('http://localhost:3000/');\n      // if (moment().isAfter(this.lastRequest) || !this.tokenExpireTime) {\n      //   let response = await axios.post(\n      //     `https://id.twitch.tv/oauth2/token?client_id=${process.env.VUE_APP_TWITCH_CLIENT_ID}&client_secret=${process.env.VUE_APP_TWITCH_CLIENT_SECRET}&grant_type=client_credentials`\n      //   );\n      //   this.token = response.data.access_token;\n      //   this.tokenExpireTime = response.data.expires_in;\n      //   this.lastRequest = moment().add(this.tokenExpireTime, \"seconds\");\n      //   return response.data.access_token.toString();\n      // }\n    },\n\n    async callEndPointIgb(config) {\n      //Always send the same header for this call, dont need to put on the parameter when calling.  \n      config.headers = {\n        \"Client-ID\": process.env.VUE_APP_TWITCH_CLIENT_ID,\n        \"Authorization\": `Bearer ${this.token}`\n      };\n      console.log(config.headers);\n      try {\n        const response = await axios(config);\n        console.log(response);\n      } catch (error) {\n        console.log('callEndPoint ERRO: ' + error);\n      }\n    }\n  },\n  mounted() {\n    this.getIgbToken();\n  }\n};","map":{"version":3,"mappings":"AAWA;AACA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,MAAK,MAAO,QAAQ;AAE3B,eAAe;EAEbC,IAAI,EAAE,aAAa;EACnBC,IAAI,GAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,eAAe,EAAE,IAAI;MACrBC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,WAAW,GAAG;MAClBR,KAAK,CAACS,GAAG,CAAC,wBAAwB;MAClC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACF,CAAC;;IACD,MAAMC,eAAe,CAACC,MAAM,EAAE;MAC5B;MACAA,MAAM,CAACC,OAAM,GAAI;QAAC,WAAW,EAAEC,OAAO,CAACC,GAAG,CAACC,wBAAwB;QAAE,eAAe,EAAG,UAAS,IAAI,CAACX,KAAM;MAAC;MAC5GY,OAAO,CAACC,GAAG,CAACN,MAAM,CAACC,OAAO;MAC1B,IAAI;QACF,MAAMM,QAAO,GAAI,MAAMlB,KAAK,CAACW,MAAM;QACnCK,OAAO,CAACC,GAAG,CAACC,QAAQ;MACtB,CAAC,QAAMC,KAAK,EAAE;QACZH,OAAO,CAACC,GAAG,CAAC,qBAAoB,GAAIE,KAAK;MAC3C;IACF;EACF,CAAC;EACDC,OAAO,GAAG;IACR,IAAI,CAACZ,WAAW,EAAC;EACnB;AAEF,CAAC","names":["axios","moment","name","data","token","tokenExpireTime","lastRequest","methods","getIgbToken","get","callEndPointIgb","config","headers","process","env","VUE_APP_TWITCH_CLIENT_ID","console","log","response","error","mounted"],"sourceRoot":"","sources":["D:\\Area de trabalho\\Portifolio\\Portifolio\\src\\components\\pcBuilderAi\\pcBuilderAi.vue"],"sourcesContent":["<template>\r\n  <div id=\"pcBuilderAi\">\r\n    <div id=\"pcBuilderAi\">\r\n      <button @click=\"getIgbToken()\">aaaa</button>\r\n      <p>{{ token }}</p>\r\n      <div ref=\"el\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import CryptoJS from 'crypto-js';\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\n\r\nexport default {\r\n  \r\n  name: \"pcBuilderAi\",\r\n  data() {\r\n    return {\r\n      token: \"\",\r\n      tokenExpireTime: null,\r\n      lastRequest: null,\r\n    };\r\n  },\r\n  methods: {\r\n    async getIgbToken() {\r\n      axios.get('http://localhost:3000/')\r\n      // if (moment().isAfter(this.lastRequest) || !this.tokenExpireTime) {\r\n      //   let response = await axios.post(\r\n      //     `https://id.twitch.tv/oauth2/token?client_id=${process.env.VUE_APP_TWITCH_CLIENT_ID}&client_secret=${process.env.VUE_APP_TWITCH_CLIENT_SECRET}&grant_type=client_credentials`\r\n      //   );\r\n      //   this.token = response.data.access_token;\r\n      //   this.tokenExpireTime = response.data.expires_in;\r\n      //   this.lastRequest = moment().add(this.tokenExpireTime, \"seconds\");\r\n      //   return response.data.access_token.toString();\r\n      // }\r\n    },\r\n    async callEndPointIgb(config) {\r\n      //Always send the same header for this call, dont need to put on the parameter when calling.  \r\n      config.headers = {\"Client-ID\": process.env.VUE_APP_TWITCH_CLIENT_ID, \"Authorization\": `Bearer ${this.token}`}\r\n      console.log(config.headers)\r\n      try {\r\n        const response = await axios(config)\r\n        console.log(response)\r\n      }catch(error) {\r\n        console.log('callEndPoint ERRO: ' + error)\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.getIgbToken()\r\n  }\r\n  \r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}