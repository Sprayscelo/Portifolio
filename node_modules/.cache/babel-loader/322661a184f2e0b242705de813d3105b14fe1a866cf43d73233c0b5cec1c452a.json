{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import CryptoJS from 'crypto-js';\nimport axios from \"axios\";\n// import moment from \"moment\";\nimport gamesConfig from '@/components/pcBuilderAi/gamesConfig.vue';\nexport default {\n  name: \"pcBuilderAi\",\n  data() {\n    return {\n      token: \"\",\n      tokenExpireTime: null,\n      lastRequest: null,\n      games: [{\n        id: 0\n      }],\n      pcConfig: [{\n        \"processor\": \"Intel Core i9-10900K\",\n        \"ram\": \"32GB DDR4\",\n        \"videoCard\": \"NVIDIA GeForce RTX 3080\",\n        \"powerSupply\": \"Corsair RM850x - 850W\",\n        \"motherboard\": \"ASUS ROG Strix Z490-E Gaming\",\n        \"obs\": \"Configuração ideal para altos FPS em jogos com qualidade de gráfico baixa a média.\"\n      }, {\n        \"processor\": \"Intel Core i9-10900K\",\n        \"ram\": \"32GB DDR4\",\n        \"videoCard\": \"NVIDIA GeForce RTX 3080\",\n        \"powerSupply\": \"Corsair RM850x - 850W\",\n        \"motherboard\": \"ASUS ROG Strix Z490-E Gaming\",\n        \"obs\": \"Configuração ideal para altos FPS em jogos com qualidade de gráfico média.\"\n      }, {\n        \"processor\": \"Intel Core i7-10700K\",\n        \"ram\": \"16GB DDR4\",\n        \"videoCard\": \"NVIDIA GeForce RTX 3070\",\n        \"powerSupply\": \"Corsair RM750x - 750W\",\n        \"motherboard\": \"ASUS ROG Strix B460-F Gaming\",\n        \"obs\": \"Configuração ideal para 60 FPS em jogos com qualidade de gráfico ultra alta.\"\n      }],\n      page: 0,\n      loadingPc: false\n    };\n  },\n  components: {\n    gamesConfig\n  },\n  methods: {\n    async callEndPointIgb() {\n      //Always send the same header for this call, dont need to put on the parameter when calling.  \n      try {\n        const response = await axios.post('http://localhost:3000/games', '');\n        console.log(response);\n      } catch (error) {\n        console.log('callEndPoint ERRO: ' + error);\n      }\n    },\n    addGame() {\n      this.games.push({\n        id: this.games.length\n      });\n    },\n    async generatePc() {\n      let gamesCardsInfos = this.$refs.configs.map(config => config.getData()).filter(card => card.gameSearched && card.gameFps && card.gameQuality);\n      if (!gamesCardsInfos.length) return alert(`Please fill up at least one card information`);\n      this.loadingPc = true;\n      const responsePcConfigAi = await axios.post('http://localhost:3000/openai', {\n        \"gamesConfig\": gamesCardsInfos\n      });\n      this.loadingPc = false;\n      console.log(responsePcConfigAi.data);\n      this.pcConfig = JSON.parse(responsePcConfigAi.data.message.content).pcConfig;\n      console.log(this.pcConfig);\n    },\n    removeGame(id) {\n      this.games = this.games.filter(game => game.id != id);\n    },\n    clear() {\n      for (let key of Object.keys(this.pcConfig)) {\n        this.pcConfig[key] = '';\n      }\n      this.$refs.configs.map(config => config.clearCard());\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","gamesConfig","name","data","token","tokenExpireTime","lastRequest","games","id","pcConfig","page","loadingPc","components","methods","callEndPointIgb","response","post","console","log","error","addGame","push","length","generatePc","gamesCardsInfos","$refs","configs","map","config","getData","filter","card","gameSearched","gameFps","gameQuality","alert","responsePcConfigAi","JSON","parse","message","content","removeGame","game","clear","key","Object","keys","clearCard"],"sourceRoot":"","sources":["D:\\Area de trabalho\\Portifolio\\Portifolio\\src\\components\\pcBuilderAi\\pcBuilderAi.vue"],"sourcesContent":["<template>\r\n  <div id=\"pcBuilderAiRoot\">\r\n    <div class=\"pcBuilderAiMainContainer backgroundContainer\">\r\n      <h1 class=\"center\">Welcome to pc builder AI</h1>\r\n      <h2>Please select the games, quality and how much fps you want to run!</h2>\r\n      <div v-if=\"pcConfig.length > 1\" class=\"pagination\">\r\n        <span @click=\"this.page = index-1\" v-for=\"index in pcConfig.length\" :key=\"index\" :class=\"`${this.page === index-1 ? 'pageActive' : ''}`\">{{index}}</span>\r\n      </div>\r\n      <div class=\"pcSpecsContainer\">\r\n        <div id=\"pcBuilderLogo\">\r\n          <img id=\"\" src=\"@/static/pc_builder_logo.png\" class=\"\" alt=\"\">\r\n          <span>Generating PC for you, please wait...</span>\r\n        </div>\r\n        <ul>\r\n          <li>Processor: <span :class=\"pcConfig ? 'spanShow' : ''\"> {{ pcConfig[this.page].processor}} </span></li>\r\n          <li>RAM memory: <span :class=\"pcConfig ? 'spanShow' : ''\"> {{pcConfig[this.page].ram}} </span></li>\r\n          <li>Video card: <span :class=\"pcConfig ? 'spanShow' : ''\"> {{pcConfig[this.page].videoCard}} </span></li>\r\n          <li>Powersupply: <span :class=\"pcConfig ? 'spanShow' : ''\"> {{pcConfig[this.page].powerSupply}} </span></li>\r\n          <li>Motherboard: <span :class=\"pcConfig ? 'spanShow' : ''\">  {{pcConfig[this.page].motherboard}} </span></li>\r\n          <li>\r\n            Obs: <small :class=\"pcConfig ? 'spanShow' : ''\"> {{ pcConfig[this.page].obs }} </small>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <h3 v-if=\"pcConfig.length > 1\"> You have <span id=\"pcNumbers\"> {{ pcConfig.length }} </span> options </h3>\r\n      <div class=\"configContainer\">\r\n        <div class=\"gameConfigContainer\">\r\n          <gamesConfig v-for=\"game in games\" :key=\"game.id\" ref=\"configs\">\r\n            <svg id=\"removeGame\" @click=\"removeGame(game.id)\" xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" viewBox=\"0 0 25 25\">\r\n              <rect width=\"25\" height=\"25\" rx=\"5\" ry=\"5\" fill=\"red\" />\r\n              <line x1=\"7\" y1=\"7\" x2=\"18\" y2=\"18\" stroke=\"white\" stroke-width=\"3\" />\r\n              <line x1=\"7\" y1=\"18\" x2=\"18\" y2=\"7\" stroke=\"white\" stroke-width=\"3\" />\r\n            </svg>\r\n          </gamesConfig>\r\n          <button class=\"add-button\" @click=\"addGame\">\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 24 24\"\r\n              width=\"24\"\r\n              height=\"24\"\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              stroke-width=\"2\"\r\n              stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\"\r\n            >\r\n              <path d=\"M12 5v14M5 12h14\" />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n        <div class=\"buttonsContainer\">\r\n          <button v-if=\"!this.pcConfig.processor\" @click=generatePc() class=\"generatePcButton\">\r\n            Generate PC!\r\n          </button>\r\n          <button @click=\"clear()\" v-if=\"this.pcConfig.processor\" class=\"generatePcButton\">Generate new PC!</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import CryptoJS from 'crypto-js';\r\nimport axios from \"axios\";\r\n// import moment from \"moment\";\r\nimport gamesConfig from '@/components/pcBuilderAi/gamesConfig.vue'\r\n\r\nexport default {\r\n  \r\n  name: \"pcBuilderAi\",\r\n  data() {\r\n    return {\r\n      token: \"\",\r\n      tokenExpireTime: null,\r\n      lastRequest: null,\r\n      games: [{id: 0}],\r\n      pcConfig: [\r\n            {\r\n                \"processor\": \"Intel Core i9-10900K\",\r\n                \"ram\": \"32GB DDR4\",\r\n                \"videoCard\": \"NVIDIA GeForce RTX 3080\",\r\n                \"powerSupply\": \"Corsair RM850x - 850W\",\r\n                \"motherboard\": \"ASUS ROG Strix Z490-E Gaming\",\r\n                \"obs\": \"Configuração ideal para altos FPS em jogos com qualidade de gráfico baixa a média.\"\r\n            },\r\n            {\r\n                \"processor\": \"Intel Core i9-10900K\",\r\n                \"ram\": \"32GB DDR4\",\r\n                \"videoCard\": \"NVIDIA GeForce RTX 3080\",\r\n                \"powerSupply\": \"Corsair RM850x - 850W\",\r\n                \"motherboard\": \"ASUS ROG Strix Z490-E Gaming\",\r\n                \"obs\": \"Configuração ideal para altos FPS em jogos com qualidade de gráfico média.\"\r\n            },\r\n            {\r\n                \"processor\": \"Intel Core i7-10700K\",\r\n                \"ram\": \"16GB DDR4\",\r\n                \"videoCard\": \"NVIDIA GeForce RTX 3070\",\r\n                \"powerSupply\": \"Corsair RM750x - 750W\",\r\n                \"motherboard\": \"ASUS ROG Strix B460-F Gaming\",\r\n                \"obs\": \"Configuração ideal para 60 FPS em jogos com qualidade de gráfico ultra alta.\"\r\n            }\r\n        ],\r\n      page: 0,\r\n      loadingPc: false\r\n    };\r\n  },\r\n  components: {\r\n    gamesConfig,\r\n  },\r\n  methods: {\r\n    async callEndPointIgb() {\r\n      //Always send the same header for this call, dont need to put on the parameter when calling.  \r\n      try {\r\n        const response = await axios.post('http://localhost:3000/games', '')\r\n        console.log(response)\r\n      }catch(error) {\r\n        console.log('callEndPoint ERRO: ' + error)\r\n      }\r\n    },\r\n\r\n    addGame() {\r\n      this.games.push({id:this.games.length})\r\n    },\r\n\r\n    async generatePc() {\r\n      let gamesCardsInfos = this.$refs.configs.map((config) => config.getData()).filter(card => card.gameSearched && card.gameFps && card.gameQuality)\r\n      \r\n      if(!gamesCardsInfos.length) return alert(`Please fill up at least one card information`)\r\n      \r\n      this.loadingPc = true\r\n      const responsePcConfigAi = await axios.post('http://localhost:3000/openai', {\"gamesConfig\": gamesCardsInfos})\r\n      this.loadingPc = false\r\n      \r\n      console.log(responsePcConfigAi.data)\r\n      \r\n      this.pcConfig = JSON.parse(responsePcConfigAi.data.message.content).pcConfig\r\n      console.log(this.pcConfig)\r\n    },\r\n\r\n    removeGame(id) {\r\n      this.games = this.games.filter(game => game.id != id)\r\n    },\r\n\r\n    clear() {\r\n      for(let key of Object.keys(this.pcConfig)) {\r\n        this.pcConfig[key] = ''\r\n      }\r\n      this.$refs.configs.map((config) => config.clearCard())\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n@import '@/static/variables.scss';\r\n.backgroundContainer{\r\n  background: hsla(233, 100%, 90%, 1);\r\n\r\n  background: linear-gradient(180deg, hsla(233, 100%, 90%, 1) 0%, hsla(0, 0%, 89%, 1) 100%);\r\n\r\n  background: -moz-linear-gradient(180deg, hsla(233, 100%, 90%, 1) 0%, hsla(0, 0%, 89%, 1) 100%);\r\n\r\n  background: -webkit-linear-gradient(180deg, hsla(233, 100%, 90%, 1) 0%, hsla(0, 0%, 89%, 1) 100%);\r\n  \r\n  border-radius: 15px;\r\n}\r\n\r\n  h1{\r\n    margin: 5px;\r\n    font-size: 2em;\r\n    font-family: 'Rubik Mono One', sans-serif;\r\n  }\r\n  h2 {\r\n    text-align: center;\r\n    font-size: 1.1rem;\r\n  }\r\n\r\n@keyframes onload {\r\n  0% {\r\n    opacity: 0;\r\n    perspective: 1000px;\r\n  }\r\n\r\n  100% {\r\n    opacity: 1;\r\n    perspective: none;\r\n  }\r\n}\r\n\r\n.add-button {\r\n  background: white;\r\n  border: 2px solid hsl(0, 0%, 0%, 30%);\r\n  border-radius: 5px;\r\n  padding: 12px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n  flex-grow: 0;\r\n}\r\n\r\n.add-button:hover {\r\n  background: whitesmoke;\r\n}\r\n\r\n/* Estilização do ícone */\r\n.add-button svg {\r\n  width: 50px;\r\n  height: 50px;\r\n  stroke: hsl(0, 0%, 0%, 30%);\r\n}\r\n\r\n.pagination {\r\n  display: flex;\r\n  flex-direction: row;\r\n  gap: 10px;\r\n  justify-content: center;\r\n  margin-bottom: 2em;\r\n  span{\r\n    background-color: $background;\r\n    border-radius: 12px;\r\n    width: 15px;\r\n    padding: 10px;\r\n    text-align: center;\r\n  }\r\n  span:hover, .pageActive{\r\n    background-color: black;\r\n    color: whitesmoke;\r\n    transition: .3s;\r\n  }\r\n}\r\n.pcSpecsContainer {\r\n  display: flex;\r\n  gap: 30px;\r\n  margin-bottom: 2em;\r\n  flex-shrink: 1;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  height: 35vh;\r\n  width: 95vw;\r\n  p{\r\n    margin: 0;\r\n    font-size: 1rem;\r\n    font-weight: bolder;\r\n  }\r\n  ul{\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-shrink: 1;\r\n    padding: 0;\r\n    margin: 0;\r\n    text-align: start;\r\n    width: 100%;\r\n    li {\r\n      display: flex;\r\n      align-items: center;\r\n      flex-grow: 1;\r\n      flex-basis: 1;\r\n      min-height: 20px;\r\n      font-weight: bolder;\r\n      span, small {\r\n        font-weight: 400;\r\n        margin-left: .3em;\r\n        opacity: 0;\r\n        transition: opacity .3s ease-in-out;\r\n      }\r\n      .spanShow{\r\n        opacity: 1;\r\n        transition: all 1s ease-out;\r\n      }\r\n    }\r\n  } \r\n}\r\nh3{\r\n  text-align: center;\r\n  text-decoration: underline;\r\n  text-underline-offset: 4px;\r\n  font-size: large;\r\n}\r\n#pcBuilderLogo {\r\n  background-color: white;\r\n  border-radius: 10px;\r\n  padding: 5px;\r\n  width: 40%;\r\n  img {\r\n    display: block;\r\n    min-width: 250px;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n}\r\n\r\n#pcBuilderAiRoot{\r\n  margin: 20px;\r\n}\r\n//.pcBuilderLogoContainer {\r\n//    margin-top: 17px;\r\n//    min-width: 30%;\r\n//    flex-basis: minmax(30%, 50%);\r\n//    background-color: whitesmoke;\r\n//    border-radius: 10px;\r\n//    \r\n//  }\r\n\r\n  .gameConfigContainer {\r\n    display: flex;\r\n    //grid-template-columns: repeat(4, minmax(10%, 1fr));\r\n    gap: 20px;\r\n    flex-wrap: wrap;\r\n    > *:not(button) {\r\n      flex-grow: 0;\r\n      flex-shrink: 1;\r\n      flex-basis: 20%;\r\n      position: relative;\r\n      padding: 10px;\r\n    }\r\n  }\r\n\r\n  .center{\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n\r\n  .configContainer {\r\n    text-align: center;\r\n    .buttonsContainer {\r\n    display: flex;\r\n    gap: 10px;\r\n    justify-content: center;\r\n      .generatePcButton {\r\n        margin-top: 20px;\r\n        padding: 1em;\r\n        background-color: green;\r\n        color: whitesmoke;\r\n        font-weight: bold;\r\n        border: none;\r\n        border-radius: 5px;\r\n        cursor: pointer;\r\n      }\r\n      .generatePcButton:hover {\r\n        background-color: black;\r\n        transition: .3s ease-in-out\r\n      }\r\n      .clearButton {\r\n        opacity: 1;\r\n        margin-top: 20px;\r\n        padding: 1em;\r\n        background-color: red;\r\n        color: whitesmoke;\r\n        font-weight: bold;\r\n        border: none;\r\n        border-radius: 5px;\r\n        cursor: pointer;\r\n        transition: opacity 1s ease-out;\r\n      }\r\n    }\r\n  }\r\n   #removeGame{\r\n    display: inline-block;\r\n    vertical-align: middle;\r\n    text-align: end;\r\n    margin-bottom: 0.5em;\r\n    margin-right: 10px;\r\n    cursor: pointer;\r\n  }\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}