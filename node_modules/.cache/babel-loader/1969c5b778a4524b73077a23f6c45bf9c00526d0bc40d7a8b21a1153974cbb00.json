{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '@/static/pc_builder_logo.png';\nconst _withScopeId = n => (_pushScopeId(\"data-v-6b01bef1\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  id: \"pcBuilderAiRoot\"\n};\nconst _hoisted_2 = {\n  class: \"pcBuilderAiMainContainer backgroundContainer\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"center\"\n}, \"Welcome to pc builder AI\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Please select the games, quality and how much fps you want to run!\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  key: 0,\n  class: \"pagination\"\n};\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = {\n  class: \"pcSpecsContainer\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  id: \"pcBuilderLogo\",\n  src: _imports_0,\n  alt: \"\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_9 = {\n  id: \"pcNumbers\"\n};\nconst _hoisted_10 = {\n  key: 0\n};\nconst _hoisted_11 = {\n  id: \"pcNumbers\"\n};\nconst _hoisted_12 = {\n  class: \"configContainer\"\n};\nconst _hoisted_13 = {\n  class: \"gameConfigContainer\"\n};\nconst _hoisted_14 = [\"onClick\"];\nconst _hoisted_15 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"rect\", {\n  width: \"25\",\n  height: \"25\",\n  rx: \"5\",\n  ry: \"5\",\n  fill: \"red\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_16 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"line\", {\n  x1: \"7\",\n  y1: \"7\",\n  x2: \"18\",\n  y2: \"18\",\n  stroke: \"white\",\n  \"stroke-width\": \"3\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_17 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"line\", {\n  x1: \"7\",\n  y1: \"18\",\n  x2: \"18\",\n  y2: \"7\",\n  stroke: \"white\",\n  \"stroke-width\": \"3\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_18 = [_hoisted_15, _hoisted_16, _hoisted_17];\nconst _hoisted_19 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\",\n  width: \"24\",\n  height: \"24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  \"stroke-width\": \"2\",\n  \"stroke-linecap\": \"round\",\n  \"stroke-linejoin\": \"round\"\n}, [/*#__PURE__*/_createElementVNode(\"path\", {\n  d: \"M12 5v14M5 12h14\"\n})], -1 /* HOISTED */));\nconst _hoisted_20 = [_hoisted_19];\nconst _hoisted_21 = {\n  class: \"buttonsContainer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_gamesConfig = _resolveComponent(\"gamesConfig\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _hoisted_4, $data.testePc.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.testePc.length, index => {\n    return _openBlock(), _createElementBlock(\"span\", {\n      onClick: $event => this.page = index,\n      key: index\n    }, _toDisplayString(index), 9 /* TEXT, PROPS */, _hoisted_6);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_7, [_hoisted_8, _createElementVNode(\"ul\", null, [_createElementVNode(\"li\", null, [_createTextVNode(\"Processor: \"), _createElementVNode(\"span\", {\n    class: _normalizeClass($data.pcConfig ? 'spanShow' : '')\n  }, _toDisplayString($data.pcConfig[this.page].processor), 3 /* TEXT, CLASS */)]), _createElementVNode(\"li\", null, [_createTextVNode(\"RAM memory: \"), _createElementVNode(\"span\", {\n    class: _normalizeClass($data.pcConfig ? 'spanShow' : '')\n  }, _toDisplayString($data.pcConfig[this.page].ram), 3 /* TEXT, CLASS */)]), _createElementVNode(\"li\", null, [_createTextVNode(\"Video card: \"), _createElementVNode(\"span\", {\n    class: _normalizeClass($data.pcConfig ? 'spanShow' : '')\n  }, _toDisplayString($data.pcConfig[this.page].videoCard), 3 /* TEXT, CLASS */)]), _createElementVNode(\"li\", null, [_createTextVNode(\"Powersupply: \"), _createElementVNode(\"span\", {\n    class: _normalizeClass($data.pcConfig ? 'spanShow' : '')\n  }, _toDisplayString($data.pcConfig[this.page].powerSupply), 3 /* TEXT, CLASS */)]), _createElementVNode(\"li\", null, [_createTextVNode(\"Motherboard: \"), _createElementVNode(\"span\", {\n    class: _normalizeClass($data.pcConfig ? 'spanShow' : '')\n  }, _toDisplayString($data.pcConfig[this.page].motherboard), 3 /* TEXT, CLASS */)]), _createElementVNode(\"li\", null, [_createTextVNode(\" Obs: \"), _createElementVNode(\"span\", {\n    class: _normalizeClass($data.pcConfig.obs ? 'spanShow' : '')\n  }, _toDisplayString($data.pcConfig.obs), 3 /* TEXT, CLASS */)]), _createElementVNode(\"div\", _hoisted_9, [$data.testePc.length > 0 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_10, [_createTextVNode(\" You have \"), _createElementVNode(\"span\", _hoisted_11, _toDisplayString($data.testePc.length), 1 /* TEXT */), _createTextVNode(\" options \")])) : _createCommentVNode(\"v-if\", true)])])]), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.games, game => {\n    return _openBlock(), _createBlock(_component_gamesConfig, {\n      key: game.id,\n      ref_for: true,\n      ref: \"configs\"\n    }, {\n      default: _withCtx(() => [(_openBlock(), _createElementBlock(\"svg\", {\n        id: \"removeGame\",\n        onClick: $event => $options.removeGame(game.id),\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"25\",\n        height: \"25\",\n        viewBox: \"0 0 25 25\"\n      }, _hoisted_18, 8 /* PROPS */, _hoisted_14))]),\n      _: 2 /* DYNAMIC */\n    }, 1024 /* DYNAMIC_SLOTS */);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"button\", {\n    class: \"add-button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.addGame && $options.addGame(...args))\n  }, _hoisted_20)]), _createElementVNode(\"div\", _hoisted_21, [!this.pcConfig.processor ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: _cache[1] || (_cache[1] = $event => $options.generatePc()),\n    class: \"generatePcButton\"\n  }, \" Generate PC! \")) : _createCommentVNode(\"v-if\", true), this.pcConfig.processor ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 1,\n    onClick: _cache[2] || (_cache[2] = $event => $options.clear()),\n    class: \"generatePcButton\"\n  }, \"Generate new PC!\")) : _createCommentVNode(\"v-if\", true)])])])]);\n}","map":{"version":3,"mappings":"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","names":["_imports_0","id","class","_createElementVNode","src","alt","width","height","rx","ry","fill","x1","y1","x2","y2","stroke","_hoisted_15","_hoisted_16","_hoisted_17","xmlns","viewBox","d","_hoisted_19","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","$data","length","_hoisted_5","_Fragment","index","onClick","page","key","_hoisted_7","_hoisted_8","processor","ram","videoCard","powerSupply","motherboard","obs","_hoisted_9","_hoisted_11","_hoisted_12","_hoisted_13","game","_createBlock","_component_gamesConfig","ref","$options","_hoisted_21","pcConfig"],"sourceRoot":"","sources":["D:\\Area de trabalho\\Portifolio\\Portifolio\\src\\components\\pcBuilderAi\\pcBuilderAi.vue"],"sourcesContent":["<template>\r\n  <div id=\"pcBuilderAiRoot\">\r\n    <div class=\"pcBuilderAiMainContainer backgroundContainer\">\r\n      <h1 class=\"center\">Welcome to pc builder AI</h1>\r\n      <h2>Please select the games, quality and how much fps you want to run!</h2>\r\n      <div v-if=\"testePc.length > 0\" class=\"pagination\">\r\n        <span @click=\"this.page = index\" v-for=\"index in testePc.length\" :key=\"index\">{{index}}</span>\r\n      </div>\r\n      <div class=\"pcSpecsContainer\">\r\n        <img id=\"pcBuilderLogo\" src=\"@/static/pc_builder_logo.png\" alt=\"\">\r\n        <ul>\r\n          <li>Processor: <span :class=\"pcConfig ? 'spanShow' : ''\"> {{ pcConfig[this.page].processor}} </span></li>\r\n          <li>RAM memory: <span :class=\"pcConfig ? 'spanShow' : ''\"> {{pcConfig[this.page].ram}} </span></li>\r\n          <li>Video card: <span :class=\"pcConfig ? 'spanShow' : ''\"> {{pcConfig[this.page].videoCard}} </span></li>\r\n          <li>Powersupply: <span :class=\"pcConfig ? 'spanShow' : ''\"> {{pcConfig[this.page].powerSupply}} </span></li>\r\n          <li>Motherboard: <span :class=\"pcConfig ? 'spanShow' : ''\">  {{pcConfig[this.page].motherboard}} </span></li>\r\n          <li>\r\n            Obs: <span :class=\"pcConfig.obs ? 'spanShow' : ''\"> {{ pcConfig.obs }} </span>\r\n          </li>\r\n          <div id=\"pcNumbers\">\r\n            <p v-if=\"testePc.length > 0\"> You have <span id=\"pcNumbers\"> {{ testePc.length }} </span> options </p>\r\n          </div>\r\n        </ul>\r\n      </div>\r\n      <div class=\"configContainer\">\r\n        <div class=\"gameConfigContainer\">\r\n          <gamesConfig v-for=\"game in games\" :key=\"game.id\" ref=\"configs\">\r\n            <svg id=\"removeGame\" @click=\"removeGame(game.id)\" xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" viewBox=\"0 0 25 25\">\r\n              <rect width=\"25\" height=\"25\" rx=\"5\" ry=\"5\" fill=\"red\" />\r\n              <line x1=\"7\" y1=\"7\" x2=\"18\" y2=\"18\" stroke=\"white\" stroke-width=\"3\" />\r\n              <line x1=\"7\" y1=\"18\" x2=\"18\" y2=\"7\" stroke=\"white\" stroke-width=\"3\" />\r\n            </svg>\r\n          </gamesConfig>\r\n          <button class=\"add-button\" @click=\"addGame\">\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 24 24\"\r\n              width=\"24\"\r\n              height=\"24\"\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              stroke-width=\"2\"\r\n              stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\"\r\n            >\r\n              <path d=\"M12 5v14M5 12h14\" />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n        <div class=\"buttonsContainer\">\r\n          <button v-if=\"!this.pcConfig.processor\" @click=generatePc() class=\"generatePcButton\">\r\n            Generate PC!\r\n          </button>\r\n          <button @click=\"clear()\" v-if=\"this.pcConfig.processor\" class=\"generatePcButton\">Generate new PC!</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import CryptoJS from 'crypto-js';\r\nimport axios from \"axios\";\r\n// import moment from \"moment\";\r\nimport gamesConfig from '@/components/pcBuilderAi/gamesConfig.vue'\r\n\r\nexport default {\r\n  \r\n  name: \"pcBuilderAi\",\r\n  data() {\r\n    return {\r\n      token: \"\",\r\n      tokenExpireTime: null,\r\n      lastRequest: null,\r\n      games: [{id: 0}],\r\n      testePc: [\r\n            {\r\n                \"processor\": \"Intel Core i9-10900K\",\r\n                \"ram\": \"32GB DDR4\",\r\n                \"videoCard\": \"NVIDIA GeForce RTX 3080\",\r\n                \"powerSupply\": \"Corsair RM850x - 850W\",\r\n                \"motherboard\": \"ASUS ROG Strix Z490-E Gaming\",\r\n                \"obs\": \"Configuração ideal para altos FPS em jogos com qualidade de gráfico baixa a média.\"\r\n            },\r\n            {\r\n                \"processor\": \"Intel Core i9-10900K\",\r\n                \"ram\": \"32GB DDR4\",\r\n                \"videoCard\": \"NVIDIA GeForce RTX 3080\",\r\n                \"powerSupply\": \"Corsair RM850x - 850W\",\r\n                \"motherboard\": \"ASUS ROG Strix Z490-E Gaming\",\r\n                \"obs\": \"Configuração ideal para altos FPS em jogos com qualidade de gráfico média.\"\r\n            },\r\n            {\r\n                \"processor\": \"Intel Core i7-10700K\",\r\n                \"ram\": \"16GB DDR4\",\r\n                \"videoCard\": \"NVIDIA GeForce RTX 3070\",\r\n                \"powerSupply\": \"Corsair RM750x - 750W\",\r\n                \"motherboard\": \"ASUS ROG Strix B460-F Gaming\",\r\n                \"obs\": \"Configuração ideal para 60 FPS em jogos com qualidade de gráfico ultra alta.\"\r\n            }\r\n        ],\r\n      pcConfig: {\r\n        processor: '',\r\n        ram: '',\r\n        videoCard:'',\r\n        powerSupply: '',\r\n        motherboard: '',\r\n        obs: ''\r\n      },\r\n      page: 0\r\n    };\r\n  },\r\n  components: {\r\n    gamesConfig,\r\n  },\r\n  methods: {\r\n    async callEndPointIgb() {\r\n      //Always send the same header for this call, dont need to put on the parameter when calling.  \r\n      try {\r\n        const response = await axios.post('http://localhost:3000/games', '')\r\n        console.log(response)\r\n      }catch(error) {\r\n        console.log('callEndPoint ERRO: ' + error)\r\n      }\r\n    },\r\n\r\n    addGame() {\r\n      this.games.push({id:this.games.length})\r\n    },\r\n\r\n    async generatePc() {\r\n      let gamesCardsInfos = this.$refs.configs.map((config) => config.getData()).filter(card => card.gameSearched && card.gameFps && card.gameQuality)\r\n      \r\n      if(!gamesCardsInfos.length) return alert(`Please fill up at least one card information`)\r\n      \r\n      // const responsePcConfigAi = await axios.post('http://localhost:3000/openai', {\"gamesConfig\": gamesCardsInfos})\r\n      // console.log(responsePcConfigAi.data)\r\n      \r\n      // this.pcConfig = JSON.parse(responsePcConfigAi.data.content)\r\n      // console.log(this.pcConfig)\r\n      this.testePc\r\n    },\r\n\r\n    removeGame(id) {\r\n      this.games = this.games.filter(game => game.id != id)\r\n    },\r\n\r\n    clear() {\r\n      for(let key of Object.keys(this.pcConfig)) {\r\n        this.pcConfig[key] = ''\r\n      }\r\n      this.$refs.configs.map((config) => config.clearCard())\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n@import '@/static/variables.scss';\r\n.backgroundContainer{\r\n  background: hsla(233, 100%, 90%, 1);\r\n\r\n  background: linear-gradient(180deg, hsla(233, 100%, 90%, 1) 0%, hsla(0, 0%, 89%, 1) 100%);\r\n\r\n  background: -moz-linear-gradient(180deg, hsla(233, 100%, 90%, 1) 0%, hsla(0, 0%, 89%, 1) 100%);\r\n\r\n  background: -webkit-linear-gradient(180deg, hsla(233, 100%, 90%, 1) 0%, hsla(0, 0%, 89%, 1) 100%);\r\n  \r\n  border-radius: 15px;\r\n}\r\n\r\n  h1{\r\n    margin: 5px;\r\n    font-size: 2em;\r\n    font-family: 'Rubik Mono One', sans-serif;\r\n  }\r\n  h2 {\r\n    text-align: center;\r\n    font-size: 1.1rem;\r\n  }\r\n\r\n@keyframes onload {\r\n  0% {\r\n    opacity: 0;\r\n    perspective: 1000px;\r\n  }\r\n\r\n  100% {\r\n    opacity: 1;\r\n    perspective: none;\r\n  }\r\n}\r\n\r\n.add-button {\r\n  background: linear-gradient(180deg, hsla(186, 33%, 94%, 1) 0%, hsla(216, 41%, 79%, 1) 100%);\r\n  border: 2px solid hsl(0, 0%, 0%, 30%);\r\n  border-radius: 5px;\r\n  padding: 12px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n  flex-grow: 0;\r\n}\r\n\r\n.add-button:hover {\r\n  background: whitesmoke;\r\n}\r\n\r\n/* Estilização do ícone */\r\n.add-button svg {\r\n  width: 50px;\r\n  height: 50px;\r\n  stroke: hsl(0, 0%, 0%, 30%);\r\n}\r\n\r\n.pagination {\r\n  display: flex;\r\n  flex-direction: row;\r\n  gap: 10px;\r\n  justify-content: center;\r\n  span{\r\n    background-color: $background;\r\n    border-radius: 12px;\r\n    width: 15px;\r\n    padding: 10px;\r\n    text-align: center;\r\n  }\r\n  span:hover{\r\n    background-color: black;\r\n    color: whitesmoke;\r\n    transition: .3s;\r\n  }\r\n}\r\n.pcSpecsContainer {\r\n  display: flex;\r\n  gap: 30px;\r\n  margin-bottom: 2em;\r\n  flex-shrink: 1;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  height: 35vh;\r\n  width: 95vw;\r\n  p{\r\n    margin: 0;\r\n    font-size: 1rem;\r\n    font-weight: bolder;\r\n  }\r\n  ul{\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-shrink: 1;\r\n    padding: 0;\r\n    margin: 0;\r\n    text-align: start;\r\n    width: 100%;\r\n    li {\r\n      display: flex;\r\n      align-items: center;\r\n      flex-grow: 1;\r\n      flex-basis: 1;\r\n      min-height: 20px;\r\n      font-weight: bolder;\r\n      span {\r\n        margin-left: .3em;\r\n        opacity: 0;\r\n      }\r\n      .spanShow{\r\n        opacity: 1;\r\n        transition: all 1s ease-out;\r\n      }\r\n    }\r\n  }\r\n  #pcNumbers {\r\n    text-align: center;\r\n    text-decoration: underline;\r\n    text-underline-offset: 4px;\r\n    span{\r\n      color: blue;\r\n      font-size: large;\r\n    }\r\n  }\r\n}\r\n#pcBuilderLogo {\r\n  display: inline-block;\r\n  background-color: white;\r\n  border-radius: 10px;\r\n  padding: 5px;\r\n  min-width: 250px;\r\n  width: 40%;\r\n  height: 100%;\r\n}\r\n\r\n#pcBuilderAiRoot{\r\n  margin: 20px;\r\n}\r\n//.pcBuilderLogoContainer {\r\n//    margin-top: 17px;\r\n//    min-width: 30%;\r\n//    flex-basis: minmax(30%, 50%);\r\n//    background-color: whitesmoke;\r\n//    border-radius: 10px;\r\n//    \r\n//  }\r\n\r\n  .gameConfigContainer {\r\n    display: flex;\r\n    //grid-template-columns: repeat(4, minmax(10%, 1fr));\r\n    gap: 20px;\r\n    flex-wrap: wrap;\r\n    > *:not(button) {\r\n      flex-grow: 0;\r\n      flex-shrink: 1;\r\n      flex-basis: 20%;\r\n      position: relative;\r\n      padding: 10px;\r\n    }\r\n  }\r\n\r\n  .center{\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n\r\n  .configContainer {\r\n    text-align: center;\r\n    .buttonsContainer {\r\n    display: flex;\r\n    gap: 10px;\r\n    justify-content: center;\r\n      .generatePcButton {\r\n        margin-top: 20px;\r\n        padding: 1em;\r\n        background-color: green;\r\n        color: whitesmoke;\r\n        font-weight: bold;\r\n        border: none;\r\n        border-radius: 5px;\r\n        cursor: pointer;\r\n      }\r\n      .generatePcButton:hover {\r\n        background-color: black;\r\n        transition: .3s ease-in-out\r\n      }\r\n      .clearButton {\r\n        opacity: 1;\r\n        margin-top: 20px;\r\n        padding: 1em;\r\n        background-color: red;\r\n        color: whitesmoke;\r\n        font-weight: bold;\r\n        border: none;\r\n        border-radius: 5px;\r\n        cursor: pointer;\r\n        transition: opacity 1s ease-out;\r\n      }\r\n    }\r\n  }\r\n   #removeGame{\r\n    display: inline-block;\r\n    vertical-align: middle;\r\n    text-align: end;\r\n    margin-bottom: 0.5em;\r\n    margin-right: 10px;\r\n    cursor: pointer;\r\n  }\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}