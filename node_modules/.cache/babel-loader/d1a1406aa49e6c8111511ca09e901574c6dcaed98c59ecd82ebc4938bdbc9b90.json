{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport _imports_0 from '@/static/pc_builder_logo.png';\nconst _hoisted_1 = {\n  id: \"pcBuilderAi\"\n};\nconst _hoisted_2 = {\n  id: \"pcBuilderAi\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"center\"\n}, \"Welcome to pc builder AI\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"backgroundContainer\"\n}, [/*#__PURE__*/_createElementVNode(\"h2\", null, \"Please select the games, quality and how much fps you want to run!\"), /*#__PURE__*/_createElementVNode(\"img\", {\n  id: \"pcBuilderLogo\",\n  src: _imports_0,\n  alt: \"\"\n})], -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"div\", null, [/*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"pcSpecs\"\n}, \" Pc specs will be shown here \")], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_gamesConfig = _resolveComponent(\"gamesConfig\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _hoisted_4, _hoisted_5, _createVNode(_component_gamesConfig)])]);\n}","map":{"version":3,"mappings":";OAMgCA,UAAkC;;EAL3DC,EAAE,EAAC;AAAa;;EACdA,EAAE,EAAC;AAAa;gCACnBC,oBAAgD;EAA5CC,KAAK,EAAC;AAAQ,GAAC,0BAAwB;gCAC3CD,oBAGM;EAHDC,KAAK,EAAC;AAAqB,iBAC9BD,oBAA2E,YAAvE,oEAAkE,gBACtEA,oBAAkE;EAA7DD,EAAE,EAAC,eAAe;EAACG,GAAkC,EAAlCJ,UAAkC;EAACK,GAAG,EAAC;;gCAEjEH,oBAIM,2BAHJA,oBAEM;EAFDD,EAAE,EAAC;AAAS,GAAC,+BAElB;;;;uBAVNK,oBAeM,OAfNC,UAeM,GAdJL,oBAaM,OAbNM,UAaM,GAZJC,UAAgD,EAChDC,UAGM,EACNC,UAIM,EACNC,aACcC","names":["_imports_0","id","_createElementVNode","class","src","alt","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_createVNode","_component_gamesConfig"],"sourceRoot":"","sources":["D:\\Area de trabalho\\Portifolio\\Portifolio\\src\\components\\pcBuilderAi\\pcBuilderAi.vue"],"sourcesContent":["<template>\r\n  <div id=\"pcBuilderAi\">\r\n    <div id=\"pcBuilderAi\">\r\n      <h1 class=\"center\">Welcome to pc builder AI</h1>\r\n      <div class=\"backgroundContainer\">\r\n        <h2>Please select the games, quality and how much fps you want to run!</h2>\r\n        <img id=\"pcBuilderLogo\" src=\"@/static/pc_builder_logo.png\" alt=\"\">\r\n      </div>\r\n      <div>\r\n        <div id=\"pcSpecs\">\r\n          Pc specs will be shown here\r\n        </div>\r\n      </div>\r\n      <gamesConfig>\r\n      </gamesConfig>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import CryptoJS from 'crypto-js';\r\nimport axios from \"axios\";\r\n// import moment from \"moment\";\r\nimport gamesConfig from '@/components/pcBuilderAi/gamesConfig.vue'\r\n\r\nexport default {\r\n  \r\n  name: \"pcBuilderAi\",\r\n  data() {\r\n    return {\r\n      token: \"\",\r\n      tokenExpireTime: null,\r\n      lastRequest: null,\r\n    };\r\n  },\r\n  components: {\r\n    gamesConfig\r\n  },\r\n  methods: {\r\n    async callEndPointIgb() {\r\n      //Always send the same header for this call, dont need to put on the parameter when calling.  \r\n      try {\r\n        const response = await axios.post('http://localhost:3000/games', '')\r\n        console.log(response)\r\n      }catch(error) {\r\n        console.log('callEndPoint ERRO: ' + error)\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n\r\n  #pcBuilderLogo {\r\n    width: 20vw;\r\n    height: 20vh;\r\n  }\r\n\r\n  .backgroundContainer{\r\n    background: hsla(233, 100%, 90%, 1);\r\n\r\nbackground: linear-gradient(180deg, hsla(233, 100%, 90%, 1) 0%, hsla(0, 0%, 89%, 1) 100%);\r\n\r\nbackground: -moz-linear-gradient(180deg, hsla(233, 100%, 90%, 1) 0%, hsla(0, 0%, 89%, 1) 100%);\r\n\r\nbackground: -webkit-linear-gradient(180deg, hsla(233, 100%, 90%, 1) 0%, hsla(0, 0%, 89%, 1) 100%);\r\n\r\n  }\r\n\r\n  .center{\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}