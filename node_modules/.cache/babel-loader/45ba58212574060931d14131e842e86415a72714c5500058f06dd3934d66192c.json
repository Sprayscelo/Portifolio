{"ast":null,"code":"// import CryptoJS from 'crypto-js';\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { onMounted } from \"vue\";\nexport default {\n  beforeRouteEnter(to, from, next) {\n    next(vm => {\n      vm.getIgbToken();\n    });\n  },\n  name: \"app-pcBuilderAi\",\n  data() {\n    return {\n      token: \"\",\n      tokenExpireTime: null,\n      lastRequest: null\n    };\n  },\n  methods: {\n    async getIgbToken() {\n      if (moment().isAfter(this.lastRequest) || !this.tokenExpireTime) {\n        let response = await axios.post(`https://id.twitch.tv/oauth2/token?client_id=${process.env.VUE_APP_TWITCH_CLIENT_ID}&client_secret=${process.env.VUE_APP_TWITCH_CLIENT_SECRET}&grant_type=client_credentials`);\n        this.token = response.data.access_token;\n        this.tokenExpireTime = response.data.expires_in;\n        this.lastRequest = moment().add(this.tokenExpireTime, \"seconds\");\n        return response.data.access_token.toString();\n      }\n    },\n    async callEndPoint(url, method) {\n      if (method == `POST`) {\n        axios.post(url);\n      }\n    }\n  },\n  setup() {\n    onMounted(() => {\n      console.log(\"passou aqui\");\n      this.getIgbToken();\n    });\n  }\n};","map":{"version":3,"mappings":"AAUA;AACA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,MAAK,MAAO,QAAQ;AAC3B,SAASC,SAAQ,QAAS,KAAK;AAE/B,eAAe;EACbC,gBAAgB,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,EAAE;IAC/BA,IAAI,CAAEC,EAAE,IAAK;MACXA,EAAE,CAACC,WAAW,EAAE;IAClB,CAAC,CAAC;EACJ,CAAC;EACDC,IAAI,EAAE,iBAAiB;EACvBC,IAAI,GAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,eAAe,EAAE,IAAI;MACrBC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMN,WAAW,GAAG;MAClB,IAAIP,MAAM,EAAE,CAACc,OAAO,CAAC,IAAI,CAACF,WAAW,KAAK,CAAC,IAAI,CAACD,eAAe,EAAE;QAC/D,IAAII,QAAO,GAAI,MAAMhB,KAAK,CAACiB,IAAI,CAC5B,+CAA8CC,OAAO,CAACC,GAAG,CAACC,wBAAyB,kBAAiBF,OAAO,CAACC,GAAG,CAACE,4BAA6B,gCAA8B,CAC7K;QACD,IAAI,CAACV,KAAI,GAAIK,QAAQ,CAACN,IAAI,CAACY,YAAY;QACvC,IAAI,CAACV,eAAc,GAAII,QAAQ,CAACN,IAAI,CAACa,UAAU;QAC/C,IAAI,CAACV,WAAU,GAAIZ,MAAM,EAAE,CAACuB,GAAG,CAAC,IAAI,CAACZ,eAAe,EAAE,SAAS,CAAC;QAChE,OAAOI,QAAQ,CAACN,IAAI,CAACY,YAAY,CAACG,QAAQ,EAAE;MAC9C;IACF,CAAC;IACD,MAAMC,YAAY,CAACC,GAAG,EAAEC,MAAM,EAAE;MAC9B,IAAIA,MAAK,IAAM,MAAK,EAAE;QACpB5B,KAAK,CAACiB,IAAI,CAACU,GAAG,CAAC;MACjB;IACF;EACF,CAAC;EACDE,KAAK,GAAG;IACN3B,SAAS,CAAC,MAAM;MACd4B,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;MAC1B,IAAI,CAACvB,WAAW,EAAE;IACpB,CAAC,CAAC;EACJ;AACF,CAAC","names":["axios","moment","onMounted","beforeRouteEnter","to","from","next","vm","getIgbToken","name","data","token","tokenExpireTime","lastRequest","methods","isAfter","response","post","process","env","VUE_APP_TWITCH_CLIENT_ID","VUE_APP_TWITCH_CLIENT_SECRET","access_token","expires_in","add","toString","callEndPoint","url","method","setup","console","log"],"sourceRoot":"","sources":["D:\\Area de trabalho\\Portifolio\\Portifolio\\src\\components\\pcBuilderAi\\pcBuilderAi.vue"],"sourcesContent":["<template>\r\n  <div id=\"weatherRoot\">\r\n    <div id=\"weatherContainer\">\r\n      <button @load=\"getIgbToken()\">aaaa</button>\r\n      <p>{{ token }}</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import CryptoJS from 'crypto-js';\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { onMounted } from \"vue\";\r\n\r\nexport default {\r\n  beforeRouteEnter(to, from, next) {\r\n    next((vm) => {\r\n      vm.getIgbToken();\r\n    });\r\n  },\r\n  name: \"app-pcBuilderAi\",\r\n  data() {\r\n    return {\r\n      token: \"\",\r\n      tokenExpireTime: null,\r\n      lastRequest: null,\r\n    };\r\n  },\r\n  methods: {\r\n    async getIgbToken() {\r\n      if (moment().isAfter(this.lastRequest) || !this.tokenExpireTime) {\r\n        let response = await axios.post(\r\n          `https://id.twitch.tv/oauth2/token?client_id=${process.env.VUE_APP_TWITCH_CLIENT_ID}&client_secret=${process.env.VUE_APP_TWITCH_CLIENT_SECRET}&grant_type=client_credentials`\r\n        );\r\n        this.token = response.data.access_token;\r\n        this.tokenExpireTime = response.data.expires_in;\r\n        this.lastRequest = moment().add(this.tokenExpireTime, \"seconds\");\r\n        return response.data.access_token.toString();\r\n      }\r\n    },\r\n    async callEndPoint(url, method) {\r\n      if (method == `POST`) {\r\n        axios.post(url);\r\n      }\r\n    },\r\n  },\r\n  setup() {\r\n    onMounted(() => {\r\n      console.log(\"passou aqui\");\r\n      this.getIgbToken();\r\n    });\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\ninput:hover {\r\n  background-color: black;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}