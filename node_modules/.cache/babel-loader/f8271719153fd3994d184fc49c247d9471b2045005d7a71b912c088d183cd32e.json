{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"weatherRoot\"\n};\nconst _hoisted_2 = {\n  id: \"weatherContainer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $options.getToken())\n  }, \"aaaa\"), _createElementVNode(\"p\", null, _toDisplayString($data.token), 1 /* TEXT */)])]);\n}","map":{"version":3,"mappings":";;EACSA,EAAE,EAAC;AAAa;;EACZA,EAAE,EAAC;AAAkB;;uBAD9BC,oBAKM,OALNC,UAKM,GAJFC,oBAGM,OAHNC,UAGM,GAFFD,oBAAyC;IAAhCE,OAAK,sCAAEC,iBAAQ;KAAI,MAAI,GAChCH,oBAAgB,4BAAXI,WAAK","names":["id","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onClick","$options","$data"],"sourceRoot":"","sources":["D:\\Area de trabalho\\Portifolio\\Portifolio\\src\\components\\pcBuilderAi\\pcBuilderAi.vue"],"sourcesContent":["<template>\r\n    <div id=\"weatherRoot\">\r\n        <div id=\"weatherContainer\">\r\n            <button @click=\"getToken()\">aaaa</button>\r\n            <p>{{token}}</p>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// import { onMounted } from 'vue'\r\n// import CryptoJS from 'crypto-js';\r\n import axios from 'axios';\r\n// import moment from 'moment'\r\n\r\n    export default {\r\n        name: 'app-pcBuilderAi',\r\n        data() {\r\n            return {\r\n               token: this.getToken()\r\n            }\r\n        },\r\n        methods: {\r\n            async getToken() {\r\n                let response = await axios.post(`https://id.twitch.tv/oauth2/token?client_id=${process.env.VUE_APP_TWITCH_CLIENT_ID}&client_secret=${process.env.VUE_APP_TWITCH_CLIENT_SECRET}&grant_type=client_credentials`)\r\n                this.token = response.data.access_token\r\n                return response.data.access_token.toString()\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style>\r\n\r\ninput:hover {\r\n    background-color: black;\r\n}\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}