{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: \"gamesConfig\",\n  data() {\n    return {\n      gameSearched: \"\",\n      gamesFounded: \"\"\n    };\n  },\n  methods: {\n    async searchGames(endpoint, query) {\n      console.log(query);\n      //Always send the same header for this call, dont need to put on the parameter when calling.  \n      try {\n        const response = await axios.post(`http://localhost:3000/${endpoint}`, query, {\n          headers: {\n            \"Content-Type\": 'text/plain'\n          }\n        });\n        console.log(response);\n      } catch (error) {\n        console.log('callEndPoint ERRO: ' + error);\n      }\n    }\n  },\n  watch: {\n    gameSearched(nv) {\n      clearTimeout(this.timeout);\n      this.timeout = setTimeout(() => {\n        this.searchGames('games', `search \"${nv}\"; fields name; where platforms = 6;`);\n      }, 2000);\n    }\n  }\n};","map":{"version":3,"mappings":"AAsBA,OAAOA,KAAI,MAAO,OAAM;AAExB,eAAe;EAEbC,IAAI,EAAE,aAAa;EACnBC,IAAI,GAAG;IACL,OAAO;MACHC,YAAY,EAAE,EAAE;MAChBC,YAAY,EAAE;IAClB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,WAAW,CAACC,QAAQ,EAAEC,KAAK,EAAE;MAC/BC,OAAO,CAACC,GAAG,CAACF,KAAK;MACnB;MACA,IAAI;QACF,MAAMG,QAAO,GAAI,MAAMX,KAAK,CAACY,IAAI,CAAE,yBAAwBL,QAAS,EAAC,EAAEC,KAAK,EAAE;UAACK,OAAO,EAAE;YAAC,cAAc,EAAE;UAAY;QAAC,CAAC;QACvHJ,OAAO,CAACC,GAAG,CAACC,QAAQ;MACtB,CAAC,QAAMG,KAAK,EAAE;QACZL,OAAO,CAACC,GAAG,CAAC,qBAAoB,GAAII,KAAK;MAC3C;IACF;EACF,CAAC;EACDC,KAAK,EAAE;IACLZ,YAAY,CAACa,EAAE,EAAE;MAEbC,YAAY,CAAC,IAAI,CAACC,OAAO;MAEzB,IAAI,CAACA,OAAM,GAAIC,UAAU,CAAC,MAAM;QAC5B,IAAI,CAACb,WAAW,CAAC,OAAO,EAAG,WAAUU,EAAG,sCAAqC;MAEjF,CAAC,EAAE,IAAI;IAEX;EACF;AAEF,CAAC","names":["axios","name","data","gameSearched","gamesFounded","methods","searchGames","endpoint","query","console","log","response","post","headers","error","watch","nv","clearTimeout","timeout","setTimeout"],"sourceRoot":"","sources":["D:\\Area de trabalho\\Portifolio\\Portifolio\\src\\components\\pcBuilderAi\\gamesConfig.vue"],"sourcesContent":["<template>\r\n    <div id=\"gamesConfigRoot\">\r\n        <div class=\"gamesConfigRoot\">\r\n            <h3>Game card selection</h3>\r\n        </div>\r\n        <div>\r\n            <span>\r\n                Plase select a game\r\n            </span>\r\n            <div>\r\n                <input type=\"search\" v-model=\"gameSearched\">\r\n                <div v-if=\"this.gamesFounded\">\r\n                    <div v-for=\"games in this.gamesFounded\" :key=\"games.id\">\r\n                        <span> {{ games.id }} aaaa</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n    \r\n  name: \"gamesConfig\",\r\n  data() {\r\n    return {\r\n        gameSearched: \"\",\r\n        gamesFounded: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    async searchGames(endpoint, query) {\r\n        console.log(query)\r\n      //Always send the same header for this call, dont need to put on the parameter when calling.  \r\n      try {\r\n        const response = await axios.post(`http://localhost:3000/${endpoint}`, query, {headers: {\"Content-Type\": 'text/plain'}})\r\n        console.log(response)\r\n      }catch(error) {\r\n        console.log('callEndPoint ERRO: ' + error)\r\n      }\r\n    },\r\n  },\r\n  watch: {\r\n    gameSearched(nv) {\r\n\r\n        clearTimeout(this.timeout)\r\n\r\n        this.timeout = setTimeout(() => {\r\n            this.searchGames('games', `search \"${nv}\"; fields name; where platforms = 6;`)\r\n            \r\n        }, 2000)\r\n\r\n    }\r\n  },    \r\n  \r\n};\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}