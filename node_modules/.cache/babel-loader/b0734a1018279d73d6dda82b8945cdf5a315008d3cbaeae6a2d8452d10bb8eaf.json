{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: \"gamesConfig\",\n  data() {\n    return {\n      gameSearched: \"\",\n      gamesFounded: \"\"\n    };\n  },\n  methods: {\n    async searchGames(endpoint, query) {\n      //Always send the same header for this call, dont need to put on the parameter when calling.  \n      try {\n        const response = await axios.post(`http://localhost:3000/${endpoint}`, query, {\n          headers: {\n            \"Content-Type\": 'text/plain'\n          }\n        });\n        console.log(response);\n      } catch (error) {\n        console.log('callEndPoint ERRO: ' + error);\n      }\n    }\n  },\n  watch: {\n    gameSearched(ov, nv) {\n      clearTimeout(this.searchGames);\n      setTimeout(this.searchGames('games', `search \"${nv}\"; fields *; where platforms = 6`), 2000);\n    }\n  },\n  mounted() {\n    this.getIgbToken();\n  }\n};","map":{"version":3,"mappings":"AAsBA,OAAOA,KAAI,MAAO,OAAM;AAExB,eAAe;EAEbC,IAAI,EAAE,aAAa;EACnBC,IAAI,GAAG;IACL,OAAO;MACHC,YAAY,EAAE,EAAE;MAChBC,YAAY,EAAE;IAClB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,WAAW,CAACC,QAAQ,EAAEC,KAAK,EAAE;MACjC;MACA,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMT,KAAK,CAACU,IAAI,CAAE,yBAAwBH,QAAS,EAAC,EAAEC,KAAK,EAAE;UAACG,OAAO,EAAE;YAAC,cAAc,EAAE;UAAY;QAAC,CAAC;QACvHC,OAAO,CAACC,GAAG,CAACJ,QAAQ;MACtB,CAAC,QAAMK,KAAK,EAAE;QACZF,OAAO,CAACC,GAAG,CAAC,qBAAoB,GAAIC,KAAK;MAC3C;IACF;EACF,CAAC;EACDC,KAAK,EAAE;IACLZ,YAAY,CAACa,EAAE,EAAEC,EAAE,EAAE;MAEjBC,YAAY,CAAC,IAAI,CAACZ,WAAW;MAE7Ba,UAAU,CAAC,IAAI,CAACb,WAAW,CAAC,OAAO,EAAG,WAAUW,EAAG,kCAAiC,CAAC,EAAE,IAAI;IAE/F;EACF,CAAC;EACDG,OAAO,GAAG;IACR,IAAI,CAACC,WAAW,EAAC;EACnB;AAEF,CAAC","names":["axios","name","data","gameSearched","gamesFounded","methods","searchGames","endpoint","query","response","post","headers","console","log","error","watch","ov","nv","clearTimeout","setTimeout","mounted","getIgbToken"],"sourceRoot":"","sources":["D:\\Area de trabalho\\Portifolio\\Portifolio\\src\\components\\pcBuilderAi\\gamesConfig.vue"],"sourcesContent":["<template>\r\n    <div id=\"gamesConfigRoot\">\r\n        <div class=\"gamesConfigRoot\">\r\n            <h3>Game card selection</h3>\r\n        </div>\r\n        <div>\r\n            <span>\r\n                Plase select a game\r\n            </span>\r\n            <div>\r\n                <input type=\"search\" v-model=\"gameSearched\">\r\n                <div v-if=\"this.gamesFounded\">\r\n                    <div v-for=\"games in this.gamesFounded\" :key=\"games.id\">\r\n                        <span> {{ games.id }} aaaa</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n    \r\n  name: \"gamesConfig\",\r\n  data() {\r\n    return {\r\n        gameSearched: \"\",\r\n        gamesFounded: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    async searchGames(endpoint, query) {\r\n      //Always send the same header for this call, dont need to put on the parameter when calling.  \r\n      try {\r\n        const response = await axios.post(`http://localhost:3000/${endpoint}`, query, {headers: {\"Content-Type\": 'text/plain'}})\r\n        console.log(response)\r\n      }catch(error) {\r\n        console.log('callEndPoint ERRO: ' + error)\r\n      }\r\n    },\r\n  },\r\n  watch: {\r\n    gameSearched(ov, nv) {\r\n\r\n        clearTimeout(this.searchGames)\r\n\r\n        setTimeout(this.searchGames('games', `search \"${nv}\"; fields *; where platforms = 6`), 2000)\r\n\r\n    }\r\n  },    \r\n  mounted() {\r\n    this.getIgbToken()\r\n  }\r\n  \r\n};\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}