{"ast":null,"code":"// import CryptoJS from 'crypto-js';\nimport axios from \"axios\";\n// import moment from \"moment\";\nimport gamesConfig from '@/components/pcBuilderAi/gamesConfig.vue';\nexport default {\n  name: \"pcBuilderAi\",\n  data() {\n    return {\n      token: \"\",\n      tokenExpireTime: null,\n      lastRequest: null,\n      pcConfig: {\n        processor: '',\n        ram: '',\n        videoCard: '',\n        powerSupply: '',\n        motherboard: '',\n        obs: ''\n      }\n    };\n  },\n  components: {\n    gamesConfig\n  },\n  methods: {\n    async callEndPointIgb() {\n      //Always send the same header for this call, dont need to put on the parameter when calling.  \n      try {\n        const response = await axios.post('http://localhost:3000/games', '');\n        console.log(response);\n      } catch (error) {\n        console.log('callEndPoint ERRO: ' + error);\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AA+BA;AACA,OAAOA,KAAI,MAAO,OAAO;AACzB;AACA,OAAOC,WAAU,MAAO,0CAAyC;AAEjE,eAAe;EAEbC,IAAI,EAAE,aAAa;EACnBC,IAAI,GAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,eAAe,EAAE,IAAI;MACrBC,WAAW,EAAE,IAAI;MACjBC,QAAQ,EAAE;QACRC,SAAS,EAAE,EAAE;QACbC,GAAG,EAAE,EAAE;QACPC,SAAS,EAAC,EAAE;QACZC,WAAW,EAAE,EAAE;QACfC,WAAW,EAAE,EAAE;QACfC,GAAG,EAAE;MACP;IACF,CAAC;EACH,CAAC;EACDC,UAAU,EAAE;IACVb;EACF,CAAC;EACDc,OAAO,EAAE;IACP,MAAMC,eAAe,GAAG;MACtB;MACA,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMjB,KAAK,CAACkB,IAAI,CAAC,6BAA6B,EAAE,EAAE;QACnEC,OAAO,CAACC,GAAG,CAACH,QAAQ;MACtB,CAAC,QAAMI,KAAK,EAAE;QACZF,OAAO,CAACC,GAAG,CAAC,qBAAoB,GAAIC,KAAK;MAC3C;IACF;EACF;AACF,CAAC","names":["axios","gamesConfig","name","data","token","tokenExpireTime","lastRequest","pcConfig","processor","ram","videoCard","powerSupply","motherboard","obs","components","methods","callEndPointIgb","response","post","console","log","error"],"sourceRoot":"","sources":["D:\\Area de trabalho\\Portifolio\\Portifolio\\src\\components\\pcBuilderAi\\pcBuilderAi.vue"],"sourcesContent":["<template>\r\n  <div id=\"pcBuilderAiRoot\">\r\n    <!-- <div class=\"pcBuilderAiMainContainer backgroundContainer\"> -->\r\n      <h1 class=\"center\">Welcome to pc builder AI</h1>\r\n      <h2>Please select the games, quality and how much fps you want to run!</h2>\r\n      <div class=\"pcSpecsContainer\">\r\n        <img id=\"pcBuilderLogo\" src=\"@/static/pc_builder_logo.png\" alt=\"\">\r\n        <ul>\r\n          <li>Processor: {{pcConfig.processor}}</li>\r\n          <li>RAM memory: {{pcConfig.ram}}</li>\r\n          <li>Video card: {{pcConfig.videoCard}}</li>\r\n          <li>Powersupply: {{pcConfig.powerSupply}}</li>\r\n          <li>Motherboard: {{pcConfig.motherboard}}</li>\r\n          <small>\r\n            {{ pcConfig.obs }}\r\n          </small>\r\n        </ul>\r\n      </div>\r\n      <div class=\"configContainer\">\r\n        <div class=\"gameConfigContainer\">\r\n          <gamesConfig>\r\n          </gamesConfig>\r\n          <gamesConfig>\r\n          </gamesConfig>\r\n        </div>\r\n      </div>\r\n    <!-- </div> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import CryptoJS from 'crypto-js';\r\nimport axios from \"axios\";\r\n// import moment from \"moment\";\r\nimport gamesConfig from '@/components/pcBuilderAi/gamesConfig.vue'\r\n\r\nexport default {\r\n  \r\n  name: \"pcBuilderAi\",\r\n  data() {\r\n    return {\r\n      token: \"\",\r\n      tokenExpireTime: null,\r\n      lastRequest: null,\r\n      pcConfig: {\r\n        processor: '',\r\n        ram: '',\r\n        videoCard:'',\r\n        powerSupply: '',\r\n        motherboard: '',\r\n        obs: ''\r\n      }\r\n    };\r\n  },\r\n  components: {\r\n    gamesConfig,\r\n  },\r\n  methods: {\r\n    async callEndPointIgb() {\r\n      //Always send the same header for this call, dont need to put on the parameter when calling.  \r\n      try {\r\n        const response = await axios.post('http://localhost:3000/games', '')\r\n        console.log(response)\r\n      }catch(error) {\r\n        console.log('callEndPoint ERRO: ' + error)\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n\r\n.backgroundContainer{\r\n  background: hsla(233, 100%, 90%, 1);\r\n\r\n  background: linear-gradient(180deg, hsla(233, 100%, 90%, 1) 0%, hsla(0, 0%, 89%, 1) 100%);\r\n\r\n  background: -moz-linear-gradient(180deg, hsla(233, 100%, 90%, 1) 0%, hsla(0, 0%, 89%, 1) 100%);\r\n\r\n  background: -webkit-linear-gradient(180deg, hsla(233, 100%, 90%, 1) 0%, hsla(0, 0%, 89%, 1) 100%);\r\n  \r\n  border-radius: 15px;\r\n}\r\n\r\n  h1{\r\n    margin: 5px;\r\n    font-size: 2em;\r\n    font-family: 'Rubik Mono One', sans-serif;\r\n  }\r\n  h2 {\r\n    text-align: center;\r\n    font-size: 1.1rem;\r\n  }\r\n\r\n@keyframes onload {\r\n  0% {\r\n    opacity: 0;\r\n    perspective: 1000px;\r\n  }\r\n\r\n  100% {\r\n    opacity: 1;\r\n    perspective: none;\r\n  }\r\n}\r\n\r\n.pcSpecsContainer {\r\n  display: flex;\r\n  gap: 30px;\r\n  margin-bottom: 2em;\r\n  flex-shrink: 1;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  height: 40%;\r\n  p{\r\n    margin: 0;\r\n    font-size: 1rem;\r\n    font-weight: bolder;\r\n  }\r\n  ul{\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-shrink: 1;\r\n    padding: 0;\r\n    margin: 0;\r\n    text-align: start;\r\n    width: 100%;\r\n    li {\r\n      display: flex;\r\n      align-items: center;\r\n      flex-grow: 1;\r\n      flex-basis: 1;\r\n      min-height: 20px;\r\n    }\r\n  }\r\n}\r\n#pcBuilderLogo {\r\n  display: inline-block;\r\n  background-color: white;\r\n  border-radius: 10px;\r\n  padding: 5px;\r\n  width: 40%;\r\n  height: 30%;\r\n}\r\n//.pcBuilderLogoContainer {\r\n//    margin-top: 17px;\r\n//    min-width: 30%;\r\n//    flex-basis: minmax(30%, 50%);\r\n//    background-color: whitesmoke;\r\n//    border-radius: 10px;\r\n//    \r\n//  }\r\n\r\n  .gameConfigContainer {\r\n    display: flex;\r\n    //grid-template-columns: repeat(4, minmax(10%, 1fr));\r\n    gap: 20px;\r\n    flex: 1;\r\n    > * {\r\n      flex-grow: 1;\r\n      padding: 10px;\r\n    }\r\n  }\r\n\r\n  .center{\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  \r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}